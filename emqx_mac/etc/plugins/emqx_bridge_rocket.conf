##====================================================================
## Configuration for EMQ X RocketMQ Bridge
##====================================================================

## RocketMQ NaneServer, Cluster support
## bridge.rocket.servers = 127.0.0.1:9876,127.0.0.2:9876,127.0.0.3:9876
bridge.rocket.servers = 127.0.0.1:9876

bridge.rocket.refresh_topic_route_interval = 5S

## Pick a partition producer and sync/async.
bridge.rocket.produce = sync

## Timeout for synchronous call
## bridge.rocket.produce.sync_timeout = 3s

## Batch size of asynchronous calls
## The total size of the messages in one batch should be no more than 1MiB.
## bridge.rocket.producer.batch_size = 100

## base64 | plain
## bridge.rocket.encode_payload_type = base64

## bridge.rocket.sock.buffer = 32KB
## bridge.rocket.sock.recbuf = 32KB
bridge.rocket.sock.sndbuf = 1MB
## bridge.rocket.sock.read_packets = 20

## Bridge rocket Hooks
## ${topic}: the RocketMQ topics to which the messages will be published.
## ${filter}: the mqtt topic (may contain wildcard) on which the action will be performed .
bridge.rocket.hook.client.connected.1     = {"topic":"ClientConnected"}
bridge.rocket.hook.client.disconnected.1  = {"topic":"ClientDisconnected"}
bridge.rocket.hook.session.subscribed.1   = {"filter":"#", "topic":"SessionSubscribed"}
bridge.rocket.hook.session.unsubscribed.1 = {"filter":"#", "topic":"SessionUnsubscribed"}
bridge.rocket.hook.message.publish.1      = {"filter":"#", "topic":"MessagePublish"}
bridge.rocket.hook.message.delivered.1    = {"filter":"#", "topic":"MessageDeliver"}
bridge.rocket.hook.message.acked.1        = {"filter":"#", "topic":"MessageAcked"}
