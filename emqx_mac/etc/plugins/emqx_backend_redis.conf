##====================================================================
## Configuration for EMQ X Redis Backend
##====================================================================
## Redis Server cluster type
## single    Single redis server
## sentinel  Redis cluster through sentinel
## cluster   Redis through cluster, redis cluster not support pub/sub channel
backend.redis.pool1.type = single

## Redis Server 127.0.0.1:6379, Redis Sentinel: 127.0.0.1:26379
backend.redis.pool1.server = 127.0.0.1:6379

## redis sentinel cluster name
## backend.redis.pool1.sentinel = mymaster

backend.redis.pool1.pool_size = 8
backend.redis.pool1.database = 0
## backend.redis.pool1.password =
backend.redis.pool1.channel = mqtt_channel

## Redis ssl configuration.
##
## Value: on | off
#backend.redis.pool1.ssl = off

## CA certificate.
##
## Value: File
#backend.redis.pool1.cafile = path/to/your/cafile

## Client ssl certificate.
##
## Value: File
#backend.redis.pool1.certfile = path/to/your/certfile

## Client ssl keyfile.
##
## Value: File
#backend.redis.pool1.keyfile = path/to/your/keyfile 

## backend.redis.pool2.server = 127.0.0.1:6379
## backend.redis.pool2.pool_size = 8
## backend.redis.pool2.database = 1
## backend.redis.pool2.password =

## Redis Backend Rules
backend.redis.hook.client.connected.1    = {"action": {"function": "on_client_connected"}, "pool": "pool1"}
backend.redis.hook.client.connected.2    = {"action": {"function": "on_subscribe_lookup"}, "pool": "pool1"}
backend.redis.hook.client.disconnected.1 = {"action": {"function": "on_client_disconnected"}, "pool": "pool1"}
backend.redis.hook.session.subscribed.1  = {"topic": "queue/#", "action": {"function": "on_message_fetch_for_queue"}, "pool": "pool1"}
backend.redis.hook.session.subscribed.2  = {"topic": "pubsub/#", "action": {"function": "on_message_fetch_for_pubsub"}, "pool": "pool1"}
backend.redis.hook.session.subscribed.3  = {"action": {"function": "on_retain_lookup"}, "pool": "pool1"}
backend.redis.hook.session.unsubscribed.1= {"topic": "#", "action": {"commands": ["DEL mqtt:acked:${clientid}:${topic}"]}, "pool": "pool1"}
backend.redis.hook.message.publish.1     = {"topic": "#", "action": {"function": "on_message_publish"}, "expired_time" : 3600, "pool": "pool1"}
backend.redis.hook.message.publish.2     = {"topic": "#", "action": {"function": "on_message_retain"}, "expired_time" : 3600, "pool": "pool1"}
backend.redis.hook.message.publish.3     = {"topic": "#", "action": {"function": "on_retain_delete"}, "pool": "pool1"}
backend.redis.hook.message.acked.1       = {"topic": "queue/#", "action": {"function": "on_message_acked_for_queue"}, "pool": "pool1"}
backend.redis.hook.message.acked.2       = {"topic": "pubsub/#", "action": {"function": "on_message_acked_for_pubsub"}, "pool": "pool1"}

## redis commands config
## backend.redis.hook.client.connected.3 = {"action": {"commands": ["SET test_table 10"]}, "pool": "pool1"}
