%% coding: utf-8
%% script generated at {2021,3,10} {22,10,38}
{script,
    {"emqx","4.2.5"},
    [{preLoaded,
         [atomics,counters,erl_init,erl_prim_loader,erl_tracer,erlang,
          erts_code_purger,erts_dirty_process_signal_handler,erts_internal,
          erts_literal_area_collector,init,persistent_term,prim_buffer,
          prim_eval,prim_file,prim_inet,prim_net,prim_zip,socket,
          socket_registry,zlib]},
     {progress,preloaded},
     {path,["$ROOT/lib/kernel-6.5.2/ebin","$ROOT/lib/stdlib-3.12/ebin"]},
     {primLoad,
         [error_handler,application,application_controller,application_master,
          code,code_server,erl_eval,erl_lint,erl_parse,error_logger,ets,file,
          filename,file_server,file_io_server,gen,gen_event,gen_server,heart,
          kernel,logger,logger_filters,logger_server,logger_backend,
          logger_config,logger_simple_h,lists,proc_lib,supervisor]},
     {kernel_load_completed},
     {progress,kernel_load_completed},
     {path,["$ROOT/lib/kernel-6.5.2/ebin"]},
     {primLoad,
         [application_starter,auth,disk_log,disk_log_1,disk_log_server,
          disk_log_sup,dist_ac,dist_util,erl_boot_server,erl_compile_server,
          erl_ddll,erl_distribution,erl_epmd,erl_reply,erl_signal_handler,
          erts_debug,gen_sctp,gen_tcp,gen_udp,global,global_group,
          global_search,group,group_history,hipe_unified_loader,inet,
          inet6_sctp,inet6_tcp,inet6_tcp_dist,inet6_udp,inet_config,inet_db,
          inet_dns,inet_gethost_native,inet_hosts,inet_parse,inet_res,
          inet_sctp,inet_tcp,inet_tcp_dist,inet_udp,kernel_config,kernel_refc,
          local_tcp,local_udp,logger_disk_log_h,logger_formatter,
          logger_h_common,logger_handler_watcher,logger_olp,logger_proxy,
          logger_std_h,logger_sup,net,net_adm,net_kernel,os,pg2,ram_file,
          raw_file_io,raw_file_io_compressed,raw_file_io_deflate,
          raw_file_io_delayed,raw_file_io_inflate,raw_file_io_list,
          raw_file_io_raw,rpc,seq_trace,standard_error,user,user_drv,user_sup,
          wrap_log_reader]},
     {path,["$ROOT/lib/stdlib-3.12/ebin"]},
     {primLoad,
         [array,base64,beam_lib,binary,c,calendar,dets,dets_server,dets_sup,
          dets_utils,dets_v9,dict,digraph,digraph_utils,edlin,edlin_expand,
          epp,erl_abstract_code,erl_anno,erl_bits,erl_compile,erl_error,
          erl_expand_records,erl_internal,erl_posix_msg,erl_pp,erl_scan,
          erl_tar,error_logger_file_h,error_logger_tty_h,escript,eval_bits,
          file_sorter,filelib,gb_sets,gb_trees,gen_fsm,gen_statem,io,io_lib,
          io_lib_format,io_lib_fread,io_lib_pretty,log_mf_h,maps,math,
          ms_transform,orddict,ordsets,otp_internal,pool,proplists,qlc,qlc_pt,
          queue,rand,random,re,sets,shell,shell_default,slave,sofs,string,
          supervisor_bridge,sys,timer,unicode,unicode_util,uri_string,
          win32reg,zip]},
     {path,["$ROOT/lib/runtime_tools-1.14/ebin"]},
     {primLoad,
         [appmon_info,dbg,dyntrace,erts_alloc_config,msacc,observer_backend,
          runtime_tools,runtime_tools_sup,scheduler,system_information,
          ttb_autostart]},
     {path,["$ROOT/lib/cuttlefish-3.0.0/ebin"]},
     {primLoad,
         [conf_parse,cuttlefish,cuttlefish_advanced,cuttlefish_bytesize,
          cuttlefish_conf,cuttlefish_datatypes,cuttlefish_duration,
          cuttlefish_duration_parse,cuttlefish_effective,cuttlefish_enum,
          cuttlefish_error,cuttlefish_escript,cuttlefish_flag,
          cuttlefish_generator,cuttlefish_mapping,cuttlefish_rebar_plugin,
          cuttlefish_schema,cuttlefish_translation,cuttlefish_util,
          cuttlefish_validator,cuttlefish_variable,cuttlefish_vmargs]},
     {path,["$ROOT/lib/gproc-0.8.0/ebin"]},
     {primLoad,
         [gproc,gproc_app,gproc_bcast,gproc_dist,gproc_info,gproc_init,
          gproc_lib,gproc_monitor,gproc_pool,gproc_ps,gproc_pt,gproc_sup]},
     {path,["$ROOT/lib/crypto-4.6.5/ebin"]},
     {primLoad,[crypto,crypto_ec_curves]},
     {path,["$ROOT/lib/asn1-5.0.10/ebin"]},
     {primLoad,[asn1rt_nif]},
     {path,["$ROOT/lib/public_key-1.7.2/ebin"]},
     {primLoad,
         ['OTP-PUB-KEY','PKCS-FRAME',pubkey_cert,pubkey_cert_records,
          pubkey_crl,pubkey_pbe,pubkey_pem,pubkey_ssh,public_key]},
     {path,["$ROOT/lib/ssl-9.6/ebin"]},
     {primLoad,
         [dtls_connection,dtls_connection_sup,dtls_handshake,
          dtls_listener_sup,dtls_packet_demux,dtls_record,dtls_socket,
          dtls_sup,dtls_v1,inet6_tls_dist,inet_tls_dist,ssl,ssl_admin_sup,
          ssl_alert,ssl_app,ssl_certificate,ssl_cipher,ssl_cipher_format,
          ssl_config,ssl_connection,ssl_connection_sup,ssl_crl,ssl_crl_cache,
          ssl_crl_cache_api,ssl_crl_hash_dir,ssl_dh_groups,ssl_dist_admin_sup,
          ssl_dist_connection_sup,ssl_dist_sup,ssl_handshake,
          ssl_listen_tracker_sup,ssl_logger,ssl_manager,ssl_pem_cache,
          ssl_pkix_db,ssl_record,ssl_session,ssl_session_cache,
          ssl_session_cache_api,ssl_srp_primes,ssl_sup,ssl_v3,
          tls_bloom_filter,tls_client_ticket_store,tls_connection,
          tls_connection_1_3,tls_connection_sup,tls_handshake,
          tls_handshake_1_3,tls_record,tls_record_1_3,tls_sender,
          tls_server_session_ticket,tls_server_session_ticket_sup,
          tls_server_sup,tls_socket,tls_sup,tls_v1]},
     {path,["$ROOT/lib/gen_rpc-2.5.0/ebin"]},
     {primLoad,
         [gen_rpc,gen_rpc_acceptor,gen_rpc_acceptor_sup,gen_rpc_app,
          gen_rpc_client,gen_rpc_client_config,gen_rpc_client_sup,
          gen_rpc_dispatcher,gen_rpc_driver,gen_rpc_driver_ssl,
          gen_rpc_driver_tcp,gen_rpc_helper,gen_rpc_keepalive,gen_rpc_server,
          gen_rpc_sup]},
     {path,["$ROOT/lib/sasl-3.4.2/ebin"]},
     {primLoad,
         [alarm_handler,erlsrv,format_lib_supp,misc_supp,rb,rb_format_supp,
          release_handler,release_handler_1,sasl,sasl_report,
          sasl_report_file_h,sasl_report_tty_h,systools,systools_lib,
          systools_make,systools_rc,systools_relup]},
     {path,["$ROOT/lib/esockd-5.7.5/ebin"]},
     {primLoad,
         [esockd,esockd_acceptor,esockd_acceptor_sup,esockd_access,esockd_app,
          esockd_cidr,esockd_connection_sup,esockd_dtls_acceptor,
          esockd_dtls_acceptor_sup,esockd_dtls_listener,esockd_limiter,
          esockd_listener,esockd_listener_sup,esockd_peercert,
          esockd_proxy_protocol,esockd_rate_limit,esockd_server,esockd_ssl,
          esockd_sup,esockd_transport,esockd_udp]},
     {path,["$ROOT/lib/cowlib-2.8.0/ebin"]},
     {primLoad,
         [cow_base64url,cow_cookie,cow_date,cow_hpack,cow_http,cow_http2,
          cow_http2_machine,cow_http_hd,cow_http_te,cow_iolists,cow_mimetypes,
          cow_multipart,cow_qs,cow_spdy,cow_sse,cow_uri,cow_ws]},
     {path,["$ROOT/lib/ranch-1.7.1/ebin"]},
     {primLoad,
         [ranch,ranch_acceptor,ranch_acceptors_sup,ranch_app,ranch_conns_sup,
          ranch_crc32c,ranch_listener_sup,ranch_protocol,ranch_proxy_header,
          ranch_server,ranch_ssl,ranch_sup,ranch_tcp,ranch_transport]},
     {path,["$ROOT/lib/cowboy-2.8.1/ebin"]},
     {primLoad,
         [cowboy,cowboy_app,cowboy_bstr,cowboy_children,cowboy_clear,
          cowboy_clock,cowboy_compress_h,cowboy_constraints,cowboy_handler,
          cowboy_http,cowboy_http2,cowboy_loop,cowboy_metrics_h,
          cowboy_middleware,cowboy_req,cowboy_rest,cowboy_router,
          cowboy_static,cowboy_stream,cowboy_stream_h,cowboy_sub_protocol,
          cowboy_sup,cowboy_tls,cowboy_tracer_h,cowboy_websocket]},
     {path,["$ROOT/lib/os_mon-2.5.1/ebin"]},
     {primLoad,
         [cpu_sup,disksup,memsup,nteventlog,os_mon,os_mon_sysinfo,os_sup]},
     {path,["$ROOT/lib/emqx-4.2.5/ebin"]},
     {primLoad,
         [emqx,emqx_access_control,emqx_access_rule,emqx_acl_cache,emqx_alarm,
          emqx_alarm_handler,emqx_app,emqx_banned,emqx_base62,emqx_batch,
          emqx_boot,emqx_broker,emqx_broker_helper,emqx_broker_sup,
          emqx_channel,emqx_cm,emqx_cm_locker,emqx_cm_registry,emqx_cm_sup,
          emqx_congestion,emqx_connection,emqx_ctl,emqx_flapping,emqx_frame,
          emqx_gc,emqx_global_gc,emqx_guid,emqx_hooks,emqx_inflight,emqx_json,
          emqx_keepalive,emqx_kernel_sup,emqx_limiter,emqx_listeners,
          emqx_logger,emqx_logger_formatter,emqx_message,emqx_metrics,
          emqx_misc,emqx_mountpoint,emqx_mqtt_caps,emqx_mqtt_props,
          emqx_mqueue,emqx_os_mon,emqx_packet,emqx_pd,emqx_plugins,emqx_pmon,
          emqx_pool,emqx_pool_sup,emqx_pqueue,emqx_psk,emqx_reason_codes,
          emqx_router,emqx_router_helper,emqx_router_sup,emqx_rpc,
          emqx_sequence,emqx_session,emqx_shared_sub,emqx_stats,emqx_sup,
          emqx_sys,emqx_sys_mon,emqx_sys_sup,emqx_tables,emqx_topic,
          emqx_tracer,emqx_trie,emqx_types,emqx_vm,emqx_vm_mon,
          emqx_ws_connection,emqx_zone]},
     {path,["$ROOT/lib/mnesia-4.16.3/ebin"]},
     {primLoad,
         [mnesia,mnesia_app,mnesia_backend_type,mnesia_backup,mnesia_bup,
          mnesia_checkpoint,mnesia_checkpoint_sup,mnesia_controller,
          mnesia_dumper,mnesia_event,mnesia_ext_sup,mnesia_frag,
          mnesia_frag_hash,mnesia_index,mnesia_kernel_sup,mnesia_late_loader,
          mnesia_lib,mnesia_loader,mnesia_locker,mnesia_log,mnesia_monitor,
          mnesia_recover,mnesia_registry,mnesia_schema,mnesia_snmp_hook,
          mnesia_sp,mnesia_subscr,mnesia_sup,mnesia_text,mnesia_tm]},
     {path,["$ROOT/lib/inets-7.1.2/ebin"]},
     {primLoad,
         [http_chunk,http_request,http_response,http_transport,http_uri,
          http_util,httpc,httpc_cookie,httpc_handler,httpc_handler_sup,
          httpc_manager,httpc_profile_sup,httpc_request,httpc_response,
          httpc_sup,httpd,httpd_acceptor,httpd_acceptor_sup,httpd_cgi,
          httpd_conf,httpd_connection_sup,httpd_custom,httpd_custom_api,
          httpd_esi,httpd_example,httpd_file,httpd_instance_sup,httpd_log,
          httpd_logger,httpd_manager,httpd_misc_sup,httpd_request,
          httpd_request_handler,httpd_response,httpd_script_env,httpd_socket,
          httpd_sup,httpd_util,inets,inets_app,inets_ftp_wrapper,inets_lib,
          inets_service,inets_sup,inets_tftp_wrapper,inets_trace,mod_actions,
          mod_alias,mod_auth,mod_auth_dets,mod_auth_mnesia,mod_auth_plain,
          mod_auth_server,mod_browser,mod_cgi,mod_dir,mod_disk_log,mod_esi,
          mod_get,mod_head,mod_htaccess,mod_log,mod_range,mod_responsecontrol,
          mod_security,mod_security_server,mod_trace]},
     {path,["$ROOT/lib/ekka-0.7.5/ebin"]},
     {primLoad,
         [ekka,ekka_app,ekka_autoclean,ekka_autocluster,ekka_autoheal,
          ekka_boot,ekka_cluster,ekka_cluster_dns,ekka_cluster_etcd,
          ekka_cluster_k8s,ekka_cluster_mcast,ekka_cluster_static,
          ekka_cluster_strategy,ekka_cluster_sup,ekka_dist,ekka_epmd,
          ekka_guid,ekka_httpc,ekka_locker,ekka_locker_sup,ekka_membership,
          ekka_mnesia,ekka_node,ekka_node_monitor,ekka_node_ttl,ekka_ring,
          ekka_sup]},
     {path,["$ROOT/lib/emqx_sn-4.2.5/ebin"]},
     {primLoad,
         [emqx_sn_app,emqx_sn_asleep_timer,emqx_sn_broadcast,emqx_sn_frame,
          emqx_sn_gateway,emqx_sn_registry,emqx_sn_sup]},
     {path,["$ROOT/lib/gen_coap-0.2.1/ebin"]},
     {primLoad,
         [coap_channel,coap_client,coap_message,coap_message_parser,
          coap_observer,coap_resource,coap_responder,coap_responder_sup,
          coap_server,coap_server_content,coap_server_registry,coap_test,
          coap_transport,core_iana,core_link,core_link_parser,
          core_link_scanner,sample_client,sample_server]},
     {path,["$ROOT/lib/emqx_coap-4.2.5/ebin"]},
     {primLoad,
         [emqx_coap_app,emqx_coap_mqtt_adapter,emqx_coap_ps_resource,
          emqx_coap_ps_topics,emqx_coap_registry,emqx_coap_resource,
          emqx_coap_server,emqx_coap_sup,emqx_coap_timer]},
     {path,["$ROOT/lib/recon-2.4.0/ebin"]},
     {primLoad,[recon,recon_alloc,recon_lib,recon_rec,recon_trace]},
     {path,["$ROOT/lib/emqx_recon-4.2.5/ebin"]},
     {primLoad,[emqx_recon,emqx_recon_cli]},
     {path,["$ROOT/lib/emqx_stomp-4.2.5/ebin"]},
     {primLoad,
         [emqx_stomp,emqx_stomp_connection,emqx_stomp_frame,
          emqx_stomp_heartbeat,emqx_stomp_protocol,emqx_stomp_transaction]},
     {path,["$ROOT/lib/xmerl-1.3.23/ebin"]},
     {primLoad,
         [xmerl,xmerl_b64Bin,xmerl_b64Bin_scan,xmerl_eventp,xmerl_html,
          xmerl_lib,xmerl_otpsgml,xmerl_regexp,xmerl_sax_old_dom,
          xmerl_sax_parser,xmerl_sax_parser_latin1,xmerl_sax_parser_list,
          xmerl_sax_parser_utf16be,xmerl_sax_parser_utf16le,
          xmerl_sax_parser_utf8,xmerl_sax_simple_dom,xmerl_scan,xmerl_sgml,
          xmerl_simple,xmerl_text,xmerl_ucs,xmerl_uri,xmerl_validate,
          xmerl_xlate,xmerl_xml,xmerl_xpath,xmerl_xpath_lib,xmerl_xpath_parse,
          xmerl_xpath_pred,xmerl_xpath_scan,xmerl_xs,xmerl_xsd,
          xmerl_xsd_type]},
     {path,["$ROOT/lib/jiffy-1.0.5/ebin"]},
     {primLoad,[jiffy,jiffy_utf8]},
     {path,["$ROOT/lib/minirest-0.3.2/ebin"]},
     {primLoad,[minirest,minirest_handler]},
     {path,["$ROOT/lib/emqx_management-4.2.5/ebin"]},
     {primLoad,
         [emqx_mgmt,emqx_mgmt_api,emqx_mgmt_api_alarms,emqx_mgmt_api_apps,
          emqx_mgmt_api_banned,emqx_mgmt_api_brokers,emqx_mgmt_api_clients,
          emqx_mgmt_api_data,emqx_mgmt_api_listeners,emqx_mgmt_api_metrics,
          emqx_mgmt_api_nodes,emqx_mgmt_api_plugins,emqx_mgmt_api_pubsub,
          emqx_mgmt_api_routes,emqx_mgmt_api_stats,
          emqx_mgmt_api_subscriptions,emqx_mgmt_app,emqx_mgmt_auth,
          emqx_mgmt_cli,emqx_mgmt_http,emqx_mgmt_sup,emqx_mgmt_util]},
     {path,["$ROOT/lib/jsone-1.4.6/ebin"]},
     {primLoad,[jsone,jsone_decode,jsone_encode]},
     {path,["$ROOT/lib/erlavro-2.9.2/ebin"]},
     {primLoad,
         [avro,avro_array,avro_binary_decoder,avro_binary_encoder,
          avro_decoder_hooks,avro_enum,avro_fingerprint,avro_fixed,
          avro_json_decoder,avro_json_encoder,avro_map,avro_ocf,
          avro_primitive,avro_record,avro_schema_store,avro_union,avro_util]},
     {path,["$ROOT/lib/gpb-4.10.0/ebin"]},
     {primLoad,
         [gpb,gpb_analyzer,gpb_codegen,gpb_codemorpher,gpb_compile,
          gpb_compile_descr,gpb_decoders_lib,gpb_defs,gpb_descriptor,
          gpb_gen_decoders,gpb_gen_encoders,gpb_gen_introspect,
          gpb_gen_json_decoders,gpb_gen_json_encoders,gpb_gen_mergers,
          gpb_gen_nif,gpb_gen_translators,gpb_gen_types,gpb_gen_verifiers,
          gpb_lib,gpb_names,gpb_parse,gpb_scan]},
     {path,["$ROOT/lib/emqx_schema_registry-4.2.5/ebin"]},
     {primLoad,
         [emqx_schema_3rd_party,emqx_schema_api,emqx_schema_http,
          emqx_schema_parser,emqx_schema_registry,emqx_schema_registry_app,
          emqx_schema_registry_sup,emqx_schema_tcp]},
     {path,["$ROOT/lib/rulesql-0.1.2/ebin"]},
     {primLoad,[rulesql,sql_lex]},
     {path,["$ROOT/lib/getopt-1.0.1/ebin"]},
     {primLoad,[getopt]},
     {path,["$ROOT/lib/emqx_rule_engine-4.2.5/ebin"]},
     {primLoad,
         [emqx_rule_actions,emqx_rule_actions_trans,emqx_rule_engine,
          emqx_rule_engine_api,emqx_rule_engine_app,emqx_rule_engine_cli,
          emqx_rule_engine_sup,emqx_rule_events,emqx_rule_funcs,emqx_rule_id,
          emqx_rule_locker,emqx_rule_maps,emqx_rule_metrics,
          emqx_rule_registry,emqx_rule_runtime,emqx_rule_sqlparser,
          emqx_rule_sqltester,emqx_rule_utils,emqx_rule_validator]},
     {path,["$ROOT/lib/unicode_util_compat-0.7.0/ebin"]},
     {primLoad,[string_compat,unicode_util_compat]},
     {path,["$ROOT/lib/idna-6.1.1/ebin"]},
     {primLoad,
         [idna,idna_bidi,idna_context,idna_data,idna_mapping,idna_table,
          idna_ucs,punycode]},
     {path,["$ROOT/lib/mimerl-1.2.0/ebin"]},
     {primLoad,[mimerl]},
     {path,["$ROOT/lib/certifi-2.5.3/ebin"]},
     {primLoad,[certifi]},
     {path,["$ROOT/lib/syntax_tools-2.2.1/ebin"]},
     {primLoad,
         [epp_dodger,erl_comment_scan,erl_prettypr,erl_recomment,erl_syntax,
          erl_syntax_lib,erl_tidy,igor,merl,merl_transform,prettypr]},
     {path,["$ROOT/lib/parse_trans-3.3.1/ebin"]},
     {primLoad,
         [ct_expand,exprecs,parse_trans,parse_trans_codegen,parse_trans_mod,
          parse_trans_pp]},
     {path,["$ROOT/lib/ssl_verify_fun-1.1.4/ebin"]},
     {primLoad,
         [ssl_verify_fingerprint,ssl_verify_fun_cert_helpers,
          ssl_verify_fun_encodings,ssl_verify_hostname,ssl_verify_pk,
          ssl_verify_string,ssl_verify_util]},
     {path,["$ROOT/lib/metrics-1.0.1/ebin"]},
     {primLoad,[metrics,metrics_dummy,metrics_exometer,metrics_folsom]},
     {path,["$ROOT/lib/hackney-1.17.0/ebin"]},
     {primLoad,
         [hackney,hackney_app,hackney_bstr,hackney_connect,hackney_connection,
          hackney_connections,hackney_cookie,hackney_date,hackney_headers,
          hackney_headers_new,hackney_http,hackney_http_connect,
          hackney_local_tcp,hackney_manager,hackney_metrics,hackney_multipart,
          hackney_pool,hackney_pool_handler,hackney_request,hackney_response,
          hackney_socks5,hackney_ssl,hackney_ssl_certificate,hackney_stream,
          hackney_sup,hackney_tcp,hackney_trace,hackney_url,hackney_util]},
     {path,["$ROOT/lib/tdengine-0.1.0/ebin"]},
     {primLoad,[tdengine,tdengine_app,tdengine_sup]},
     {path,["$ROOT/lib/clickhouse-0.1/ebin"]},
     {primLoad,[clickhouse,clickhouse_app,clickhouse_sup]},
     {path,["$ROOT/lib/odbc-2.12.4/ebin"]},
     {primLoad,[odbc,odbc_app,odbc_sup]},
     {path,["$ROOT/lib/dolphinc-0.1.2/ebin"]},
     {primLoad,[dolphinc,dolphinc_app]},
     {path,["$ROOT/lib/jamdb_oracle-0.4.2/ebin"]},
     {primLoad,
         [jamdb_oracle,jamdb_oracle_conn,jamdb_oracle_crypt,
          jamdb_oracle_tns_decoder,jamdb_oracle_tns_encoder]},
     {path,["$ROOT/lib/emqx_rule_actions-e4.2.5/ebin"]},
     {primLoad,
         [emqx_backend_cassa_actions,emqx_backend_clickhouse_actions,
          emqx_backend_dolphindb_actions,emqx_backend_dynamo_actions,
          emqx_backend_influxdb_actions,emqx_backend_mongo_actions,
          emqx_backend_mysql_actions,emqx_backend_opentsdb_actions,
          emqx_backend_oracle_actions,emqx_backend_pgsql_actions,
          emqx_backend_redis_actions,emqx_backend_sqlserver_actions,
          emqx_backend_tdengine_actions,emqx_bridge_kafka_actions,
          emqx_bridge_pulsar_actions,emqx_bridge_rabbit_actions,
          emqx_bridge_rocket_actions,emqx_rule_actions_batcher,
          emqx_rule_actions_utils]},
     {path,["$ROOT/lib/emqx_modules-4.2.5/ebin"]},
     {primLoad,
         [emqx_mod_acl_internal,emqx_mod_api_topic_metrics,emqx_mod_delayed,
          emqx_mod_presence,emqx_mod_rewrite,emqx_mod_subscription,
          emqx_mod_topic_metrics,emqx_modules,emqx_modules_api,
          emqx_modules_app,emqx_modules_registry,emqx_modules_sup,
          emqx_modules_utils]},
     {path,["$ROOT/lib/emqx_modules_spec-4.2.5/ebin"]},
     {primLoad,
         [emqx_kafka_consumer,emqx_module_auth_http,emqx_module_auth_jwt,
          emqx_module_auth_ldap,emqx_module_auth_mnesia,
          emqx_module_auth_mongo,emqx_module_auth_mysql,
          emqx_module_auth_pgsql,emqx_module_auth_psk_file,
          emqx_module_auth_redis,emqx_module_auth_sasl,
          emqx_module_consumer_kafka,emqx_module_consumer_pulsar,
          emqx_module_delayed_publish,emqx_module_exhook,emqx_module_exproto,
          emqx_module_hot_confs,emqx_module_internal_acl,emqx_module_presence,
          emqx_module_prometheus,emqx_module_proto_coap,
          emqx_module_proto_gbt32960,emqx_module_proto_jt808,
          emqx_module_proto_lwm2m,emqx_module_proto_mqtt_sn,
          emqx_module_proto_stomp,emqx_module_proto_tcp,emqx_module_recon,
          emqx_module_retainer,emqx_module_subscriber_mqtt,
          emqx_module_subscription,emqx_module_topic_metrics,
          emqx_module_topic_rewrite,emqx_module_utils,emqx_pulsar_consumer]},
     {path,["$ROOT/lib/emqx_retainer-4.2.5/ebin"]},
     {primLoad,
         [emqx_retainer,emqx_retainer_app,emqx_retainer_cli,
          emqx_retainer_sup]},
     {path,["$ROOT/lib/replayq-0.3.2/ebin"]},
     {primLoad,[replayq]},
     {path,["$ROOT/lib/emqtt-1.2.3/ebin"]},
     {primLoad,[emqtt,emqtt_cli,emqtt_frame,emqtt_props,emqtt_sock,emqtt_ws]},
     {path,["$ROOT/lib/emqx_bridge_mqtt-4.2.5/ebin"]},
     {primLoad,
         [emqx_bridge_connect,emqx_bridge_mqtt,emqx_bridge_mqtt_actions,
          emqx_bridge_mqtt_app,emqx_bridge_mqtt_cli,emqx_bridge_mqtt_sup,
          emqx_bridge_msg,emqx_bridge_rpc,emqx_bridge_worker]},
     {path,["$ROOT/lib/gun-1.3.3/ebin"]},
     {primLoad,
         [gun,gun_app,gun_content_handler,gun_data_h,gun_http,gun_http2,
          gun_sse_h,gun_sup,gun_tcp,gun_tls,gun_ws,gun_ws_h]},
     {path,["$ROOT/lib/ehttpc-0.1.2/ebin"]},
     {primLoad,
         [ehttpc,ehttpc_app,ehttpc_pool,ehttpc_pool_sup,ehttpc_sup,
          ehttpc_worker_sup]},
     {path,["$ROOT/lib/emqx_web_hook-4.2.5/ebin"]},
     {primLoad,
         [emqx_web_hook,emqx_web_hook_actions,emqx_web_hook_app,
          emqx_web_hook_sup]},
     {path,["$ROOT/lib/emqx_auth_mnesia-4.2.5/ebin"]},
     {primLoad,
         [emqx_acl_mnesia,emqx_acl_mnesia_api,emqx_acl_mnesia_cli,
          emqx_auth_mnesia,emqx_auth_mnesia_api,emqx_auth_mnesia_app,
          emqx_auth_mnesia_cli,emqx_auth_mnesia_sup]},
     {path,["$ROOT/lib/emqx_auth_http-4.2.5/ebin"]},
     {primLoad,
         [emqx_acl_http,emqx_auth_http,emqx_auth_http_app,emqx_auth_http_cli,
          emqx_http_client,emqx_http_client_sup]},
     {path,["$ROOT/lib/mysql-1.5.0/ebin"]},
     {primLoad,[mysql,mysql_cache,mysql_conn,mysql_encode,mysql_protocol]},
     {path,["$ROOT/lib/ecpool-0.5.1/ebin"]},
     {primLoad,
         [ecpool,ecpool_app,ecpool_pool,ecpool_pool_sup,ecpool_sup,
          ecpool_worker,ecpool_worker_sup]},
     {path,["$ROOT/lib/pbkdf2-2.0.2/ebin"]},
     {primLoad,[pbkdf2]},
     {path,["$ROOT/lib/bcrypt-0.6.0/ebin"]},
     {primLoad,
         [bcrypt,bcrypt_app,bcrypt_nif,bcrypt_nif_worker,bcrypt_pool,
          bcrypt_port,bcrypt_port_sup,bcrypt_sup]},
     {path,["$ROOT/lib/emqx_passwd-0.1/ebin"]},
     {primLoad,[emqx_passwd]},
     {path,["$ROOT/lib/emqx_auth_mysql-4.2.5/ebin"]},
     {primLoad,
         [emqx_acl_mysql,emqx_auth_mysql,emqx_auth_mysql_app,
          emqx_auth_mysql_cli,emqx_auth_mysql_sup]},
     {path,["$ROOT/lib/jose-1.10.1/ebin"]},
     {primLoad,
         [jose,jose_app,jose_base,jose_base64,jose_base64url,
          jose_block_encryptor,jose_chacha20_poly1305,
          jose_chacha20_poly1305_crypto,jose_chacha20_poly1305_libsodium,
          jose_chacha20_poly1305_unsupported,jose_curve25519,
          jose_curve25519_libdecaf,jose_curve25519_libsodium,
          jose_curve25519_unsupported,jose_curve448,jose_curve448_libdecaf,
          jose_curve448_unsupported,jose_json,jose_json_jason,jose_json_jiffy,
          jose_json_jsone,jose_json_jsx,jose_json_ojson,jose_json_poison,
          jose_json_poison_compat_encoder,jose_json_poison_lexical_encoder,
          jose_json_unsupported,jose_jwa,jose_jwa_aes,jose_jwa_aes_kw,
          jose_jwa_base64url,jose_jwa_bench,jose_jwa_chacha20,
          jose_jwa_chacha20_poly1305,jose_jwa_concat_kdf,jose_jwa_curve25519,
          jose_jwa_curve448,jose_jwa_ed25519,jose_jwa_ed448,
          jose_jwa_hchacha20,jose_jwa_math,jose_jwa_pkcs1,jose_jwa_pkcs5,
          jose_jwa_pkcs7,jose_jwa_poly1305,jose_jwa_sha3,jose_jwa_unsupported,
          jose_jwa_x25519,jose_jwa_x448,jose_jwa_xchacha20,
          jose_jwa_xchacha20_poly1305,jose_jwe,jose_jwe_alg,
          jose_jwe_alg_aes_kw,jose_jwe_alg_c20p_kw,jose_jwe_alg_dir,
          jose_jwe_alg_ecdh_1pu,jose_jwe_alg_ecdh_es,jose_jwe_alg_pbes2,
          jose_jwe_alg_rsa,jose_jwe_alg_xc20p_kw,jose_jwe_enc,
          jose_jwe_enc_aes,jose_jwe_enc_c20p,jose_jwe_enc_xc20p,jose_jwe_zip,
          jose_jwk,jose_jwk_der,jose_jwk_kty,jose_jwk_kty_ec,jose_jwk_kty_oct,
          jose_jwk_kty_okp_ed25519,jose_jwk_kty_okp_ed25519ph,
          jose_jwk_kty_okp_ed448,jose_jwk_kty_okp_ed448ph,
          jose_jwk_kty_okp_x25519,jose_jwk_kty_okp_x448,jose_jwk_kty_rsa,
          jose_jwk_oct,jose_jwk_openssh_key,jose_jwk_pem,jose_jwk_set,
          jose_jwk_use_enc,jose_jwk_use_sig,jose_jws,jose_jws_alg,
          jose_jws_alg_ecdsa,jose_jws_alg_eddsa,jose_jws_alg_hmac,
          jose_jws_alg_none,jose_jws_alg_poly1305,jose_jws_alg_rsa_pkcs1_v1_5,
          jose_jws_alg_rsa_pss,jose_jwt,jose_public_key,jose_server,jose_sha3,
          jose_sha3_keccakf1600_driver,jose_sha3_keccakf1600_nif,
          jose_sha3_libdecaf,jose_sha3_unsupported,jose_sup,
          jose_xchacha20_poly1305,jose_xchacha20_poly1305_crypto,
          jose_xchacha20_poly1305_unsupported]},
     {path,["$ROOT/lib/emqx_auth_jwt-4.2.5/ebin"]},
     {primLoad,[emqx_auth_jwt,emqx_auth_jwt_app,emqx_auth_jwt_svr]},
     {path,["$ROOT/lib/emqx_psk_file-4.2.5/ebin"]},
     {primLoad,[emqx_psk_file,emqx_psk_file_app,emqx_psk_file_sup]},
     {path,["$ROOT/lib/eldap2-1.2.2/ebin"]},
     {primLoad,['ELDAPv3',eldap2]},
     {path,["$ROOT/lib/emqx_auth_ldap-4.2.5/ebin"]},
     {primLoad,
         [emqx_acl_ldap,emqx_auth_ldap,emqx_auth_ldap_app,emqx_auth_ldap_cli,
          emqx_auth_ldap_sup]},
     {path,["$ROOT/lib/bson-v0.2.2/ebin"]},
     {primLoad,[bson,bson_binary,bson_schema]},
     {path,["$ROOT/lib/poolboy-1.5.1/ebin"]},
     {primLoad,[poolboy,poolboy_sup,poolboy_worker]},
     {path,["$ROOT/lib/mongodb-3.0.0/ebin"]},
     {primLoad,
         [mc_auth_logic,mc_connection_man,mc_cursor,mc_monitor,mc_pool_sup,
          mc_selecting_logics,mc_server,mc_super_sup,mc_topology,
          mc_topology_logics,mc_utils,mc_worker,mc_worker_api,mc_worker_logic,
          mongo_api,mongo_app,mongo_id_server,mongo_protocol,mongoc]},
     {path,["$ROOT/lib/emqx_auth_mongo-4.2.5/ebin"]},
     {primLoad,
         [emqx_acl_mongo,emqx_auth_mongo,emqx_auth_mongo_app,
          emqx_auth_mongo_sup]},
     {path,["$ROOT/lib/epgsql-4.4.0/ebin"]},
     {primLoad,
         [epgsql,epgsql_binary,epgsql_cmd_batch,epgsql_cmd_bind,
          epgsql_cmd_close,epgsql_cmd_connect,epgsql_cmd_describe_portal,
          epgsql_cmd_describe_statement,epgsql_cmd_equery,epgsql_cmd_execute,
          epgsql_cmd_parse,epgsql_cmd_prepared_query,epgsql_cmd_squery,
          epgsql_cmd_start_replication,epgsql_cmd_sync,
          epgsql_cmd_update_type_cache,epgsql_codec,epgsql_codec_boolean,
          epgsql_codec_bpchar,epgsql_codec_datetime,epgsql_codec_float,
          epgsql_codec_geometric,epgsql_codec_hstore,epgsql_codec_integer,
          epgsql_codec_intrange,epgsql_codec_json,epgsql_codec_net,
          epgsql_codec_noop,epgsql_codec_postgis,epgsql_codec_text,
          epgsql_codec_timerange,epgsql_codec_uuid,epgsql_command,
          epgsql_errcodes,epgsql_fdatetime,epgsql_idatetime,epgsql_oid_db,
          epgsql_scram,epgsql_sock,epgsql_wire,epgsqla,epgsqli,ewkb]},
     {path,["$ROOT/lib/emqx_auth_pgsql-4.2.5/ebin"]},
     {primLoad,
         [emqx_acl_pgsql,emqx_auth_pgsql,emqx_auth_pgsql_app,
          emqx_auth_pgsql_cli,emqx_auth_pgsql_sup]},
     {path,["$ROOT/lib/eredis-1.2.2/ebin"]},
     {primLoad,
         [basho_bench_driver_eredis,basho_bench_driver_erldis,eredis,
          eredis_client,eredis_parser,eredis_sentinel,eredis_sentinel_client,
          eredis_sentinel_masters,eredis_sentinel_sup,eredis_sub,
          eredis_sub_client]},
     {path,["$ROOT/lib/eredis_cluster-0.6.4/ebin"]},
     {primLoad,
         [eredis_cluster,eredis_cluster_hash,eredis_cluster_monitor,
          eredis_cluster_pool,eredis_cluster_pool_worker,eredis_cluster_sup]},
     {path,["$ROOT/lib/emqx_auth_redis-4.2.5/ebin"]},
     {primLoad,
         [emqx_acl_redis,emqx_auth_redis,emqx_auth_redis_app,
          emqx_auth_redis_cli,emqx_auth_redis_sup]},
     {path,["$ROOT/lib/emqx_dashboard-4.2.5/ebin"]},
     {primLoad,
         [emqx_dashboard,emqx_dashboard_admin,emqx_dashboard_api,
          emqx_dashboard_app,emqx_dashboard_cli,emqx_dashboard_cluster_api,
          emqx_dashboard_collection,emqx_dashboard_license_api,
          emqx_dashboard_monitor_api,emqx_dashboard_sup]},
     {path,["$ROOT/lib/emqx_lua_hook-4.2.5/ebin"]},
     {primLoad,
         [emqx_lua_hook,emqx_lua_hook_app,emqx_lua_hook_cli,emqx_lua_hook_sup,
          emqx_lua_script]},
     {path,["$ROOT/lib/lwm2m_coap-0.3.0/ebin"]},
     {primLoad,
         [coap_core_iana,coap_core_link,coap_core_link_parser,
          coap_core_link_scanner,lwm2m_coap_channel,lwm2m_coap_client,
          lwm2m_coap_message,lwm2m_coap_message_parser,lwm2m_coap_observer,
          lwm2m_coap_resource,lwm2m_coap_responder,lwm2m_coap_responder_sup,
          lwm2m_coap_server,lwm2m_coap_server_content,
          lwm2m_coap_server_registry,lwm2m_coap_test,lwm2m_coap_transport]},
     {path,["$ROOT/lib/emqx_lwm2m-4.2.5/ebin"]},
     {primLoad,
         [binary_util,emqx_lwm2m_api,emqx_lwm2m_app,emqx_lwm2m_cm,
          emqx_lwm2m_cm_sup,emqx_lwm2m_cmd_handler,emqx_lwm2m_coap_resource,
          emqx_lwm2m_coap_server,emqx_lwm2m_json,emqx_lwm2m_message,
          emqx_lwm2m_protocol,emqx_lwm2m_sup,emqx_lwm2m_timer,emqx_lwm2m_tlv,
          emqx_lwm2m_xml_object,emqx_lwm2m_xml_object_db]},
     {path,["$ROOT/lib/prometheus-3.1.0/ebin"]},
     {primLoad,
         [prometheus,prometheus_buckets,prometheus_collector,
          prometheus_counter,prometheus_format,prometheus_gauge,
          prometheus_histogram,prometheus_http,prometheus_instrumenter,
          prometheus_metric,prometheus_metric_spec,prometheus_misc,
          prometheus_mnesia,prometheus_mnesia_collector,prometheus_model,
          prometheus_model_helpers,prometheus_protobuf_format,
          prometheus_registry,prometheus_summary,prometheus_sup,
          prometheus_test_instrumenter,prometheus_text_format,prometheus_time,
          prometheus_vm_memory_collector,prometheus_vm_statistics_collector,
          prometheus_vm_system_info_collector]},
     {path,["$ROOT/lib/emqx_prometheus-4.2.5/ebin"]},
     {primLoad,[emqx_prometheus,emqx_prometheus_app,emqx_prometheus_sup]},
     {path,["$ROOT/lib/grpc-0.5.0/ebin"]},
     {primLoad,
         [grpc,grpc_app,grpc_client,grpc_client_sup,grpc_cowboy_h,grpc_frame,
          grpc_lib,grpc_stream_h,grpc_sup]},
     {path,["$ROOT/lib/emqx_exhook-e4.2.5/ebin"]},
     {primLoad,
         [emqx_exhook,emqx_exhook_app,emqx_exhook_cli,emqx_exhook_handler,
          emqx_exhook_pb,emqx_exhook_server,emqx_exhook_sup,
          emqx_exhook_v_1_hook_provider_bhvr,
          emqx_exhook_v_1_hook_provider_client]},
     {path,["$ROOT/lib/emqx_exproto-e4.2.5/ebin"]},
     {primLoad,
         [emqx_exproto,emqx_exproto_app,emqx_exproto_channel,
          emqx_exproto_conn,emqx_exproto_gcli,emqx_exproto_gsvr,
          emqx_exproto_pb,emqx_exproto_sup,
          emqx_exproto_v_1_connection_adapter_bhvr,
          emqx_exproto_v_1_connection_adapter_client,
          emqx_exproto_v_1_connection_handler_bhvr,
          emqx_exproto_v_1_connection_handler_client]},
     {path,["$ROOT/lib/emqx_sasl-4.2.5/ebin"]},
     {primLoad,
         [emqx_sasl,emqx_sasl_api,emqx_sasl_app,emqx_sasl_cli,
          emqx_sasl_scram]},
     {path,["$ROOT/lib/emqx_jt808-4.2.5/ebin"]},
     {primLoad,
         [emqx_jt808_app,emqx_jt808_auth,emqx_jt808_connection,
          emqx_jt808_frame,emqx_jt808_protocol,emqx_jt808_sup]},
     {path,["$ROOT/lib/emqx_gbt32960-4.2.5/ebin"]},
     {primLoad,
         [emqx_gbt32960,emqx_gbt32960_app,emqx_gbt32960_channel,
          emqx_gbt32960_conn,emqx_gbt32960_frame,emqx_gbt32960_sup]},
     {path,["$ROOT/lib/emqx_tcp-4.2.5/ebin"]},
     {primLoad,
         [emqx_tcp_app,emqx_tcp_connection,emqx_tcp_frame,emqx_tcp_protocol,
          emqx_tcp_sup]},
     {path,["$ROOT/lib/emqx_conf-4.2.5/ebin"]},
     {primLoad,[emqx_conf,emqx_conf_api,emqx_conf_app,emqx_conf_sup]},
     {path,["$ROOT/lib/emqx_backend_redis-4.2.5/ebin"]},
     {primLoad,
         [emqx_backend_redis,emqx_backend_redis_app,emqx_backend_redis_cli,
          emqx_backend_redis_sub,emqx_backend_redis_sup]},
     {path,["$ROOT/lib/emqx_backend_mysql-4.2.5/ebin"]},
     {primLoad,
         [emqx_backend_mysql,emqx_backend_mysql_app,
          emqx_backend_mysql_batcher,emqx_backend_mysql_cli,
          emqx_backend_mysql_sup]},
     {path,["$ROOT/lib/emqx_backend_pgsql-4.2.5/ebin"]},
     {primLoad,
         [emqx_backend_pgsql,emqx_backend_pgsql_app,
          emqx_backend_pgsql_batcher,emqx_backend_pgsql_cli,
          emqx_backend_pgsql_sup]},
     {path,["$ROOT/lib/emqx_backend_mongo-4.2.5/ebin"]},
     {primLoad,
         [emqx_backend_mongo,emqx_backend_mongo_app,emqx_backend_mongo_cli,
          emqx_backend_mongo_sup]},
     {path,["$ROOT/lib/ecql-0.5/ebin"]},
     {primLoad,[ecql,ecql_cl,ecql_frame,ecql_proto,ecql_sock,ecql_types]},
     {path,["$ROOT/lib/emqx_backend_cassa-4.2.5/ebin"]},
     {primLoad,
         [emqx_backend_cassa,emqx_backend_cassa_app,emqx_backend_cassa_cli,
          emqx_backend_cassa_sup]},
     {path,["$ROOT/lib/jsx-2.9.0/ebin"]},
     {primLoad,
         [jsx,jsx_config,jsx_consult,jsx_decoder,jsx_encoder,jsx_parser,
          jsx_to_json,jsx_to_term,jsx_verify]},
     {path,["$ROOT/lib/opentsdb-0.5.0/ebin"]},
     {primLoad,[opentsdb,opentsdb_app,opentsdb_sup]},
     {path,["$ROOT/lib/emqx_backend_opentsdb-4.2.5/ebin"]},
     {primLoad,
         [emqx_backend_opentsdb,emqx_backend_opentsdb_app,
          emqx_backend_opentsdb_cli,emqx_backend_opentsdb_sup]},
     {path,["$ROOT/lib/influxdb-0.5.1/ebin"]},
     {primLoad,[influxdb,influxdb_app,influxdb_line,influxdb_sup]},
     {path,["$ROOT/lib/emqx_backend_influxdb-4.2.5/ebin"]},
     {primLoad,
         [emqx_backend_influxdb,emqx_backend_influxdb_app,
          emqx_backend_influxdb_cli,emqx_backend_influxdb_sup]},
     {path,["$ROOT/lib/eini-1.2.6/ebin"]},
     {primLoad,[eini,eini_app,eini_lexer,eini_parser,eini_sup]},
     {path,["$ROOT/lib/base16-1.0.0/ebin"]},
     {primLoad,[base16]},
     {path,["$ROOT/lib/lhttpc-1.6.2/ebin"]},
     {primLoad,
         [lhttpc,lhttpc_client,lhttpc_lib,lhttpc_manager,lhttpc_sock,
          lhttpc_sup]},
     {path,["$ROOT/lib/erlcloud-3.2.8/ebin"]},
     {primLoad,
         [erlcloud,erlcloud_as,erlcloud_athena,erlcloud_autoscaling,
          erlcloud_aws,erlcloud_cloudformation,erlcloud_cloudfront,
          erlcloud_cloudsearch,erlcloud_cloudtrail,erlcloud_cloudwatch_logs,
          erlcloud_config,erlcloud_cur,erlcloud_ddb,erlcloud_ddb1,
          erlcloud_ddb2,erlcloud_ddb_impl,erlcloud_ddb_streams,
          erlcloud_ddb_util,erlcloud_directconnect,erlcloud_ec2,
          erlcloud_ec2_meta,erlcloud_ecs,erlcloud_ecs_container_credentials,
          erlcloud_elb,erlcloud_emr,erlcloud_glue,erlcloud_guardduty,
          erlcloud_http,erlcloud_httpc,erlcloud_iam,erlcloud_inspector,
          erlcloud_json,erlcloud_kinesis,erlcloud_kinesis_impl,erlcloud_kms,
          erlcloud_lambda,erlcloud_mes,erlcloud_mms,erlcloud_mon,
          erlcloud_mturk,erlcloud_rds,erlcloud_redshift,erlcloud_retry,
          erlcloud_route53,erlcloud_s3,erlcloud_sdb,erlcloud_ses,erlcloud_sns,
          erlcloud_sqs,erlcloud_states,erlcloud_sts,erlcloud_util,
          erlcloud_waf,erlcloud_xml]},
     {path,["$ROOT/lib/emqx_backend_dynamo-4.2.5/ebin"]},
     {primLoad,
         [emqx_backend_dynamo,emqx_backend_dynamo_app,emqx_backend_dynamo_cli,
          emqx_backend_dynamo_client,emqx_backend_dynamo_sup]},
     {path,["$ROOT/lib/emqx_backend_timescale-4.2.5/ebin"]},
     {primLoad,
         [emqx_backend_timescale,emqx_backend_timescale_app,
          emqx_backend_timescale_cli,emqx_backend_timescale_sup]},
     {path,["$ROOT/lib/snappyer-1.2.5/ebin"]},
     {primLoad,[snappyer]},
     {path,["$ROOT/lib/crc32cer-0.1.9/ebin"]},
     {primLoad,[crc32cer]},
     {path,["$ROOT/lib/kafka_protocol-2.3.6.1/ebin"]},
     {primLoad,
         [kpro,kpro_api_vsn,kpro_auth_backend,kpro_batch,kpro_batch_v01,
          kpro_brokers,kpro_compress,kpro_connection,kpro_consumer_group,
          kpro_lib,kpro_prelude_schema,kpro_req_lib,kpro_rsp_lib,kpro_sasl,
          kpro_schema,kpro_scram,kpro_sent_reqs,kpro_txn_lib,kpro_varint]},
     {path,["$ROOT/lib/wolff-1.4.2/ebin"]},
     {primLoad,
         [wolff,wolff_app,wolff_client,wolff_client_sup,wolff_producer,
          wolff_producers,wolff_producers_sup,wolff_stats,wolff_sup]},
     {path,["$ROOT/lib/supervisor3-1.1.11/ebin"]},
     {primLoad,[supervisor3]},
     {path,["$ROOT/lib/brod-3.14.0/ebin"]},
     {primLoad,
         [brod,brod_cg_commits,brod_cli,brod_cli_pipe,brod_client,
          brod_consumer,brod_consumers_sup,brod_group_coordinator,
          brod_group_member,brod_group_subscriber,brod_group_subscriber_v2,
          brod_group_subscriber_worker,brod_kafka_apis,brod_kafka_request,
          brod_producer,brod_producer_buffer,brod_producers_sup,brod_sup,
          brod_topic_subscriber,brod_topic_subscriber_cb_fun,brod_utils]},
     {path,["$ROOT/lib/emqx_bridge_kafka-4.2.5/ebin"]},
     {primLoad,
         [emqx_bridge_kafka,emqx_bridge_kafka_app,emqx_bridge_kafka_cli,
          emqx_bridge_kafka_sup]},
     {path,["$ROOT/lib/compiler-7.5.3/ebin"]},
     {primLoad,
         [beam_a,beam_asm,beam_block,beam_clean,beam_dict,beam_disasm,
          beam_except,beam_flatten,beam_jump,beam_kernel_to_ssa,beam_listing,
          beam_opcodes,beam_peep,beam_ssa,beam_ssa_bsm,beam_ssa_codegen,
          beam_ssa_dead,beam_ssa_funs,beam_ssa_lint,beam_ssa_opt,beam_ssa_pp,
          beam_ssa_pre_codegen,beam_ssa_recv,beam_ssa_share,beam_ssa_type,
          beam_trim,beam_utils,beam_validator,beam_z,cerl,cerl_clauses,
          cerl_inline,cerl_sets,cerl_trees,compile,core_lib,core_lint,
          core_parse,core_pp,core_scan,erl_bifs,rec_env,sys_core_alias,
          sys_core_bsm,sys_core_fold,sys_core_fold_lists,sys_core_inline,
          sys_pre_attributes,v3_core,v3_kernel,v3_kernel_pp]},
     {path,["$ROOT/lib/goldrush-0.1.9/ebin"]},
     {primLoad,
         [glc,glc_code,glc_lib,glc_ops,glc_run,gr_app,gr_context,gr_counter,
          gr_counter_sup,gr_manager,gr_manager_sup,gr_param,gr_param_sup,
          gr_sup,gre]},
     {path,["$ROOT/lib/lager-3.6.5/ebin"]},
     {primLoad,
         [error_logger_lager_h,lager,lager_app,lager_backend_throttle,
          lager_common_test_backend,lager_config,lager_console_backend,
          lager_crash_log,lager_default_formatter,lager_file_backend,
          lager_format,lager_handler_watcher,lager_handler_watcher_sup,
          lager_manager_killer,lager_msg,lager_rotator_behaviour,
          lager_rotator_default,lager_stdlib,lager_sup,lager_transform,
          lager_trunc_io,lager_util]},
     {path,["$ROOT/lib/rabbit_common-3.7.14/ebin"]},
     {primLoad,
         [app_utils,code_version,credit_flow,delegate,delegate_sup,
          file_handle_cache,file_handle_cache_stats,gen_server2,
          lager_forwarder_backend,mirrored_supervisor,mnesia_sync,pmon,
          priority_queue,rabbit_amqp_connection,rabbit_amqqueue_common,
          rabbit_auth_backend_dummy,rabbit_auth_mechanism,
          rabbit_authn_backend,rabbit_authz_backend,rabbit_backing_queue,
          rabbit_basic_common,rabbit_binary_generator,rabbit_binary_parser,
          rabbit_cert_info,rabbit_channel_common,rabbit_command_assembler,
          rabbit_control_misc,rabbit_core_metrics,rabbit_data_coercion,
          rabbit_error_logger_handler,rabbit_event,rabbit_exchange_type,
          rabbit_framing_amqp_0_8,rabbit_framing_amqp_0_9_1,rabbit_heartbeat,
          rabbit_http_util,rabbit_json,rabbit_log,rabbit_misc,
          rabbit_msg_store_index,rabbit_net,rabbit_nodes_common,
          rabbit_numerical,rabbit_password_hashing,rabbit_pbe,
          rabbit_peer_discovery_backend,rabbit_policy_validator,
          rabbit_queue_collector_common,rabbit_queue_master_locator,
          rabbit_registry,rabbit_registry_class,rabbit_resource_monitor_misc,
          rabbit_runtime,rabbit_runtime_parameter,rabbit_semver,
          rabbit_semver_parser,rabbit_ssl_options,rabbit_types,rabbit_writer,
          supervisor2,vm_memory_monitor,worker_pool,worker_pool_sup,
          worker_pool_worker]},
     {path,["$ROOT/lib/amqp_client-3.7.14/ebin"]},
     {primLoad,
         [amqp_auth_mechanisms,amqp_channel,amqp_channel_sup,
          amqp_channel_sup_sup,amqp_channels_manager,amqp_client,
          amqp_connection,amqp_connection_sup,amqp_connection_type_sup,
          amqp_direct_connection,amqp_direct_consumer,amqp_gen_connection,
          amqp_gen_consumer,amqp_main_reader,amqp_network_connection,
          amqp_rpc_client,amqp_rpc_server,amqp_selective_consumer,amqp_ssl,
          amqp_sup,amqp_uri,amqp_util,rabbit_routing_util,uri_parser]},
     {path,["$ROOT/lib/emqx_bridge_rabbit-4.2.5/ebin"]},
     {primLoad,
         [emqx_bridge_rabbit,emqx_bridge_rabbit_app,emqx_bridge_rabbit_ch,
          emqx_bridge_rabbit_sup]},
     {path,["$ROOT/lib/murmerl3-0.1.0/ebin"]},
     {primLoad,[murmerl3]},
     {path,["$ROOT/lib/pulsar-0.4.2/ebin"]},
     {primLoad,
         [pulsar,pulsar_api,pulsar_app,pulsar_client,pulsar_client_sup,
          pulsar_consumer,pulsar_consumers,pulsar_consumers_sup,
          pulsar_producer,pulsar_producers,pulsar_producers_sup,
          pulsar_protocol_frame,pulsar_sup]},
     {path,["$ROOT/lib/emqx_bridge_pulsar-4.2.5/ebin"]},
     {primLoad,
         [emqx_bridge_pulsar,emqx_bridge_pulsar_app,emqx_bridge_pulsar_sup]},
     {path,["$ROOT/lib/jsonr-1.5.1/ebin"]},
     {primLoad,[jsonr,jsonr_decode,jsonr_encode]},
     {path,["$ROOT/lib/rocketmq-0.3.2/ebin"]},
     {primLoad,
         [rocketmq,rocketmq_app,rocketmq_client,rocketmq_client_sup,
          rocketmq_producer,rocketmq_producers,rocketmq_producers_sup,
          rocketmq_protocol_frame,rocketmq_sup]},
     {path,["$ROOT/lib/emqx_bridge_rocket-4.2.5/ebin"]},
     {primLoad,
         [emqx_bridge_rocket,emqx_bridge_rocket_app,emqx_bridge_rocket_sup]},
     {path,["$ROOT/lib/emqx_license-4.2.5/ebin"]},
     {primLoad,
         [emqx_exhook_entr,emqx_license,emqx_license_app,emqx_license_cli,
          emqx_license_mgr,emqx_license_sup]},
     {path,["$ROOT/lib/observer-2.9.3/ebin"]},
     {primLoad,
         [cdv_atom_cb,cdv_bin_cb,cdv_detail_wx,cdv_dist_cb,cdv_ets_cb,
          cdv_fun_cb,cdv_gen_cb,cdv_html_wx,cdv_info_wx,cdv_int_tab_cb,
          cdv_mem_cb,cdv_mod_cb,cdv_multi_wx,cdv_persistent_cb,cdv_port_cb,
          cdv_proc_cb,cdv_sched_cb,cdv_table_wx,cdv_term_cb,cdv_timer_cb,
          cdv_virtual_list_wx,cdv_wx,crashdump_viewer,etop,etop_tr,etop_txt,
          observer,observer_alloc_wx,observer_app_wx,observer_html_lib,
          observer_lib,observer_perf_wx,observer_port_wx,observer_pro_wx,
          observer_procinfo,observer_sys_wx,observer_trace_wx,
          observer_traceoptions_wx,observer_tv_table,observer_tv_wx,
          observer_wx,ttb,ttb_et]},
     {path,["$ROOT/lib/luerl-0.3/ebin"]},
     {primLoad,
         [luerl,luerl_app,luerl_comp,luerl_comp_cg,luerl_comp_env,
          luerl_comp_locf,luerl_comp_peep,luerl_comp_vars,luerl_emul,
          luerl_lib,luerl_lib_basic,luerl_lib_bit32,luerl_lib_debug,
          luerl_lib_io,luerl_lib_math,luerl_lib_os,luerl_lib_package,
          luerl_lib_string,luerl_lib_string_format,luerl_lib_table,
          luerl_parse,luerl_scan,luerl_sup,ttdict]},
     {progress,modules_loaded},
     {path,
         ["$ROOT/lib/kernel-6.5.2/ebin","$ROOT/lib/stdlib-3.12/ebin",
          "$ROOT/lib/runtime_tools-1.14/ebin",
          "$ROOT/lib/cuttlefish-3.0.0/ebin","$ROOT/lib/gproc-0.8.0/ebin",
          "$ROOT/lib/crypto-4.6.5/ebin","$ROOT/lib/asn1-5.0.10/ebin",
          "$ROOT/lib/public_key-1.7.2/ebin","$ROOT/lib/ssl-9.6/ebin",
          "$ROOT/lib/gen_rpc-2.5.0/ebin","$ROOT/lib/sasl-3.4.2/ebin",
          "$ROOT/lib/esockd-5.7.5/ebin","$ROOT/lib/cowlib-2.8.0/ebin",
          "$ROOT/lib/ranch-1.7.1/ebin","$ROOT/lib/cowboy-2.8.1/ebin",
          "$ROOT/lib/os_mon-2.5.1/ebin","$ROOT/lib/emqx-4.2.5/ebin",
          "$ROOT/lib/mnesia-4.16.3/ebin","$ROOT/lib/inets-7.1.2/ebin",
          "$ROOT/lib/ekka-0.7.5/ebin","$ROOT/lib/emqx_sn-4.2.5/ebin",
          "$ROOT/lib/gen_coap-0.2.1/ebin","$ROOT/lib/emqx_coap-4.2.5/ebin",
          "$ROOT/lib/recon-2.4.0/ebin","$ROOT/lib/emqx_recon-4.2.5/ebin",
          "$ROOT/lib/emqx_stomp-4.2.5/ebin","$ROOT/lib/xmerl-1.3.23/ebin",
          "$ROOT/lib/jiffy-1.0.5/ebin","$ROOT/lib/minirest-0.3.2/ebin",
          "$ROOT/lib/emqx_management-4.2.5/ebin","$ROOT/lib/jsone-1.4.6/ebin",
          "$ROOT/lib/erlavro-2.9.2/ebin","$ROOT/lib/gpb-4.10.0/ebin",
          "$ROOT/lib/emqx_schema_registry-4.2.5/ebin",
          "$ROOT/lib/rulesql-0.1.2/ebin","$ROOT/lib/getopt-1.0.1/ebin",
          "$ROOT/lib/emqx_rule_engine-4.2.5/ebin",
          "$ROOT/lib/unicode_util_compat-0.7.0/ebin",
          "$ROOT/lib/idna-6.1.1/ebin","$ROOT/lib/mimerl-1.2.0/ebin",
          "$ROOT/lib/certifi-2.5.3/ebin","$ROOT/lib/syntax_tools-2.2.1/ebin",
          "$ROOT/lib/parse_trans-3.3.1/ebin",
          "$ROOT/lib/ssl_verify_fun-1.1.4/ebin",
          "$ROOT/lib/metrics-1.0.1/ebin","$ROOT/lib/hackney-1.17.0/ebin",
          "$ROOT/lib/tdengine-0.1.0/ebin","$ROOT/lib/clickhouse-0.1/ebin",
          "$ROOT/lib/odbc-2.12.4/ebin","$ROOT/lib/dolphinc-0.1.2/ebin",
          "$ROOT/lib/jamdb_oracle-0.4.2/ebin",
          "$ROOT/lib/emqx_rule_actions-e4.2.5/ebin",
          "$ROOT/lib/emqx_modules-4.2.5/ebin",
          "$ROOT/lib/emqx_modules_spec-4.2.5/ebin",
          "$ROOT/lib/emqx_retainer-4.2.5/ebin","$ROOT/lib/replayq-0.3.2/ebin",
          "$ROOT/lib/emqtt-1.2.3/ebin",
          "$ROOT/lib/emqx_bridge_mqtt-4.2.5/ebin","$ROOT/lib/gun-1.3.3/ebin",
          "$ROOT/lib/ehttpc-0.1.2/ebin","$ROOT/lib/emqx_web_hook-4.2.5/ebin",
          "$ROOT/lib/emqx_auth_mnesia-4.2.5/ebin",
          "$ROOT/lib/emqx_auth_http-4.2.5/ebin","$ROOT/lib/mysql-1.5.0/ebin",
          "$ROOT/lib/ecpool-0.5.1/ebin","$ROOT/lib/pbkdf2-2.0.2/ebin",
          "$ROOT/lib/bcrypt-0.6.0/ebin","$ROOT/lib/emqx_passwd-0.1/ebin",
          "$ROOT/lib/emqx_auth_mysql-4.2.5/ebin","$ROOT/lib/jose-1.10.1/ebin",
          "$ROOT/lib/emqx_auth_jwt-4.2.5/ebin",
          "$ROOT/lib/emqx_psk_file-4.2.5/ebin","$ROOT/lib/eldap2-1.2.2/ebin",
          "$ROOT/lib/emqx_auth_ldap-4.2.5/ebin","$ROOT/lib/bson-v0.2.2/ebin",
          "$ROOT/lib/poolboy-1.5.1/ebin","$ROOT/lib/mongodb-3.0.0/ebin",
          "$ROOT/lib/emqx_auth_mongo-4.2.5/ebin",
          "$ROOT/lib/epgsql-4.4.0/ebin",
          "$ROOT/lib/emqx_auth_pgsql-4.2.5/ebin",
          "$ROOT/lib/eredis-1.2.2/ebin","$ROOT/lib/eredis_cluster-0.6.4/ebin",
          "$ROOT/lib/emqx_auth_redis-4.2.5/ebin",
          "$ROOT/lib/emqx_dashboard-4.2.5/ebin",
          "$ROOT/lib/emqx_lua_hook-4.2.5/ebin",
          "$ROOT/lib/lwm2m_coap-0.3.0/ebin","$ROOT/lib/emqx_lwm2m-4.2.5/ebin",
          "$ROOT/lib/prometheus-3.1.0/ebin",
          "$ROOT/lib/emqx_prometheus-4.2.5/ebin","$ROOT/lib/grpc-0.5.0/ebin",
          "$ROOT/lib/emqx_exhook-e4.2.5/ebin",
          "$ROOT/lib/emqx_exproto-e4.2.5/ebin",
          "$ROOT/lib/emqx_sasl-4.2.5/ebin","$ROOT/lib/emqx_jt808-4.2.5/ebin",
          "$ROOT/lib/emqx_gbt32960-4.2.5/ebin",
          "$ROOT/lib/emqx_tcp-4.2.5/ebin","$ROOT/lib/emqx_conf-4.2.5/ebin",
          "$ROOT/lib/emqx_backend_redis-4.2.5/ebin",
          "$ROOT/lib/emqx_backend_mysql-4.2.5/ebin",
          "$ROOT/lib/emqx_backend_pgsql-4.2.5/ebin",
          "$ROOT/lib/emqx_backend_mongo-4.2.5/ebin","$ROOT/lib/ecql-0.5/ebin",
          "$ROOT/lib/emqx_backend_cassa-4.2.5/ebin",
          "$ROOT/lib/jsx-2.9.0/ebin","$ROOT/lib/opentsdb-0.5.0/ebin",
          "$ROOT/lib/emqx_backend_opentsdb-4.2.5/ebin",
          "$ROOT/lib/influxdb-0.5.1/ebin",
          "$ROOT/lib/emqx_backend_influxdb-4.2.5/ebin",
          "$ROOT/lib/eini-1.2.6/ebin","$ROOT/lib/base16-1.0.0/ebin",
          "$ROOT/lib/lhttpc-1.6.2/ebin","$ROOT/lib/erlcloud-3.2.8/ebin",
          "$ROOT/lib/emqx_backend_dynamo-4.2.5/ebin",
          "$ROOT/lib/emqx_backend_timescale-4.2.5/ebin",
          "$ROOT/lib/snappyer-1.2.5/ebin","$ROOT/lib/crc32cer-0.1.9/ebin",
          "$ROOT/lib/kafka_protocol-2.3.6.1/ebin",
          "$ROOT/lib/wolff-1.4.2/ebin","$ROOT/lib/supervisor3-1.1.11/ebin",
          "$ROOT/lib/brod-3.14.0/ebin",
          "$ROOT/lib/emqx_bridge_kafka-4.2.5/ebin",
          "$ROOT/lib/compiler-7.5.3/ebin","$ROOT/lib/goldrush-0.1.9/ebin",
          "$ROOT/lib/lager-3.6.5/ebin","$ROOT/lib/rabbit_common-3.7.14/ebin",
          "$ROOT/lib/amqp_client-3.7.14/ebin",
          "$ROOT/lib/emqx_bridge_rabbit-4.2.5/ebin",
          "$ROOT/lib/murmerl3-0.1.0/ebin","$ROOT/lib/pulsar-0.4.2/ebin",
          "$ROOT/lib/emqx_bridge_pulsar-4.2.5/ebin",
          "$ROOT/lib/jsonr-1.5.1/ebin","$ROOT/lib/rocketmq-0.3.2/ebin",
          "$ROOT/lib/emqx_bridge_rocket-4.2.5/ebin",
          "$ROOT/lib/emqx_license-4.2.5/ebin","$ROOT/lib/observer-2.9.3/ebin",
          "$ROOT/lib/luerl-0.3/ebin"]},
     {kernelProcess,heart,{heart,start,[]}},
     {kernelProcess,logger,{logger_server,start_link,[]}},
     {kernelProcess,application_controller,
         {application_controller,start,
             [{application,kernel,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"6.5.2"},
                   {id,[]},
                   {modules,
                       [application,application_controller,application_master,
                        application_starter,auth,code,code_server,dist_util,
                        erl_boot_server,erl_compile_server,erl_distribution,
                        erl_reply,erl_signal_handler,error_handler,
                        error_logger,file,file_server,file_io_server,global,
                        global_group,global_search,group,group_history,heart,
                        hipe_unified_loader,inet6_tcp,inet6_tcp_dist,
                        inet6_udp,inet6_sctp,inet_config,inet_hosts,
                        inet_gethost_native,inet_tcp_dist,kernel,
                        kernel_config,kernel_refc,local_tcp,local_udp,logger,
                        logger_backend,logger_config,logger_disk_log_h,
                        logger_filters,logger_formatter,logger_h_common,
                        logger_handler_watcher,logger_olp,logger_proxy,
                        logger_server,logger_simple_h,logger_std_h,logger_sup,
                        net,net_adm,net_kernel,os,ram_file,rpc,user,user_drv,
                        user_sup,disk_log,disk_log_1,disk_log_server,
                        disk_log_sup,dist_ac,erl_ddll,erl_epmd,erts_debug,
                        gen_tcp,gen_udp,gen_sctp,inet,inet_db,inet_dns,
                        inet_parse,inet_res,inet_tcp,inet_udp,inet_sctp,pg2,
                        raw_file_io,raw_file_io_compressed,
                        raw_file_io_deflate,raw_file_io_delayed,
                        raw_file_io_inflate,raw_file_io_list,raw_file_io_raw,
                        seq_trace,standard_error,wrap_log_reader]},
                   {registered,
                       [application_controller,erl_reply,auth,boot_server,
                        code_server,disk_log_server,disk_log_sup,
                        erl_prim_loader,error_logger,file_server_2,
                        fixtable_server,global_group,global_name_server,heart,
                        init,kernel_config,kernel_refc,kernel_sup,logger,
                        logger_handler_watcher,logger_sup,net_kernel,net_sup,
                        rex,user,os_server,ddll_server,erl_epmd,inet_db,pg2]},
                   {applications,[]},
                   {included_applications,[]},
                   {env,
                       [{logger_level,notice},{logger_sasl_compatible,false}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{kernel,[]}}]}]}},
     {progress,init_kernel_started},
     {apply,
         {application,load,
             [{application,stdlib,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"3.12"},
                   {id,[]},
                   {modules,
                       [array,base64,beam_lib,binary,c,calendar,dets,
                        dets_server,dets_sup,dets_utils,dets_v9,dict,digraph,
                        digraph_utils,edlin,edlin_expand,epp,eval_bits,
                        erl_abstract_code,erl_anno,erl_bits,erl_compile,
                        erl_error,erl_eval,erl_expand_records,erl_internal,
                        erl_lint,erl_parse,erl_posix_msg,erl_pp,erl_scan,
                        erl_tar,error_logger_file_h,error_logger_tty_h,
                        escript,ets,file_sorter,filelib,filename,gb_trees,
                        gb_sets,gen,gen_event,gen_fsm,gen_server,gen_statem,
                        io,io_lib,io_lib_format,io_lib_fread,io_lib_pretty,
                        lists,log_mf_h,maps,math,ms_transform,orddict,ordsets,
                        otp_internal,pool,proc_lib,proplists,qlc,qlc_pt,queue,
                        rand,random,re,sets,shell,shell_default,slave,sofs,
                        string,supervisor,supervisor_bridge,sys,timer,unicode,
                        unicode_util,uri_string,win32reg,zip]},
                   {registered,
                       [timer_server,rsh_starter,take_over_monitor,
                        pool_master,dets]},
                   {applications,[kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,runtime_tools,
                  [{description,"RUNTIME_TOOLS"},
                   {vsn,"1.14"},
                   {id,[]},
                   {modules,
                       [appmon_info,dbg,observer_backend,runtime_tools,
                        runtime_tools_sup,erts_alloc_config,ttb_autostart,
                        dyntrace,system_information,scheduler,msacc]},
                   {registered,[runtime_tools_sup]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{runtime_tools,[]}}]}]}},
     {apply,
         {application,load,
             [{application,cuttlefish,
                  [{description,"cuttlefish configuration abstraction"},
                   {vsn,"3.0.0"},
                   {id,[]},
                   {modules,
                       [conf_parse,cuttlefish,cuttlefish_advanced,
                        cuttlefish_bytesize,cuttlefish_conf,
                        cuttlefish_datatypes,cuttlefish_duration,
                        cuttlefish_duration_parse,cuttlefish_effective,
                        cuttlefish_enum,cuttlefish_error,cuttlefish_escript,
                        cuttlefish_flag,cuttlefish_generator,
                        cuttlefish_mapping,cuttlefish_rebar_plugin,
                        cuttlefish_schema,cuttlefish_translation,
                        cuttlefish_util,cuttlefish_validator,
                        cuttlefish_variable,cuttlefish_vmargs]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,gproc,
                  [{description,"Extended process registry for Erlang"},
                   {vsn,"0.8.0"},
                   {id,"GPROC"},
                   {modules,
                       [gproc,gproc_app,gproc_bcast,gproc_dist,gproc_info,
                        gproc_init,gproc_lib,gproc_monitor,gproc_pool,
                        gproc_ps,gproc_pt,gproc_sup]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{gproc_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,crypto,
                  [{description,"CRYPTO"},
                   {vsn,"4.6.5"},
                   {id,[]},
                   {modules,[crypto,crypto_ec_curves]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[{fips_mode,false},{rand_cache_size,896}]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,asn1,
                  [{description,"The Erlang ASN1 compiler version 5.0.10"},
                   {vsn,"5.0.10"},
                   {id,[]},
                   {modules,[asn1rt_nif]},
                   {registered,[asn1_ns,asn1db]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,public_key,
                  [{description,"Public key infrastructure"},
                   {vsn,"1.7.2"},
                   {id,[]},
                   {modules,
                       [public_key,pubkey_pem,pubkey_pbe,pubkey_ssh,
                        pubkey_cert,pubkey_cert_records,pubkey_crl,
                        'OTP-PUB-KEY','PKCS-FRAME']},
                   {registered,[]},
                   {applications,[kernel,stdlib,crypto,asn1]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ssl,
                  [{description,"Erlang/OTP SSL application"},
                   {vsn,"9.6"},
                   {id,[]},
                   {modules,
                       [tls_connection,tls_connection_1_3,tls_handshake,
                        tls_handshake_1_3,tls_record,tls_record_1_3,
                        tls_socket,tls_v1,ssl_v3,tls_connection_sup,
                        tls_sender,tls_server_sup,
                        tls_server_session_ticket_sup,
                        tls_server_session_ticket,tls_sup,ssl_dh_groups,
                        dtls_connection,dtls_handshake,dtls_record,
                        dtls_socket,dtls_v1,dtls_connection_sup,
                        dtls_packet_demux,dtls_listener_sup,dtls_sup,ssl,
                        ssl_session_cache_api,ssl_config,ssl_connection,
                        ssl_handshake,ssl_record,ssl_cipher,ssl_cipher_format,
                        ssl_srp_primes,ssl_alert,ssl_listen_tracker_sup,
                        tls_bloom_filter,tls_client_ticket_store,
                        inet_tls_dist,inet6_tls_dist,ssl_dist_sup,
                        ssl_dist_connection_sup,ssl_dist_admin_sup,
                        ssl_session,ssl_session_cache,ssl_manager,
                        ssl_pem_cache,ssl_pkix_db,ssl_certificate,ssl_crl,
                        ssl_crl_cache,ssl_crl_cache_api,ssl_crl_hash_dir,
                        ssl_logger,ssl_app,ssl_sup,ssl_admin_sup,
                        ssl_connection_sup]},
                   {registered,[ssl_sup,ssl_manager]},
                   {applications,[kernel,stdlib,crypto,public_key]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{ssl_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,gen_rpc,
                  [{description,
                       "A scalable RPC library for Erlang-VM based languages"},
                   {vsn,"2.5.0"},
                   {id,[]},
                   {modules,
                       [gen_rpc,gen_rpc_acceptor,gen_rpc_acceptor_sup,
                        gen_rpc_app,gen_rpc_client,gen_rpc_client_config,
                        gen_rpc_client_sup,gen_rpc_dispatcher,gen_rpc_driver,
                        gen_rpc_driver_ssl,gen_rpc_driver_tcp,gen_rpc_helper,
                        gen_rpc_keepalive,gen_rpc_server,gen_rpc_sup]},
                   {registered,[gen_rpc_dispatcher]},
                   {applications,[kernel,stdlib,crypto,asn1,public_key,ssl]},
                   {included_applications,[]},
                   {env,
                       [{tcp_server_port,5369},
                        {tcp_client_port,5369},
                        {ssl_server_port,false},
                        {ssl_server_options,[]},
                        {ssl_client_port,5370},
                        {ssl_client_options,[]},
                        {default_client_driver,tcp},
                        {client_config_per_node,{internal,#{}}},
                        {rpc_module_control,disabled},
                        {rpc_module_list,[]},
                        {connect_timeout,5000},
                        {send_timeout,5000},
                        {authentication_timeout,5000},
                        {call_receive_timeout,15000},
                        {sbcast_receive_timeout,15000},
                        {client_inactivity_timeout,infinity},
                        {server_inactivity_timeout,infinity},
                        {async_call_inactivity_timeout,infinity},
                        {socket_keepalive_idle,5},
                        {socket_keepalive_interval,5},
                        {socket_keepalive_count,2}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{gen_rpc_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,sasl,
                  [{description,"SASL  CXC 138 11"},
                   {vsn,"3.4.2"},
                   {id,[]},
                   {modules,
                       [sasl,alarm_handler,format_lib_supp,misc_supp,rb,
                        rb_format_supp,release_handler,release_handler_1,
                        erlsrv,sasl_report,sasl_report_tty_h,
                        sasl_report_file_h,systools,systools_make,systools_rc,
                        systools_relup,systools_lib]},
                   {registered,[sasl_sup,alarm_handler,release_handler]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{sasl,[]}}]}]}},
     {apply,
         {application,load,
             [{application,esockd,
                  [{description,
                       "General Non-blocking TCP/SSL and UDP/DTLS Server"},
                   {vsn,"5.7.5"},
                   {id,"esockd"},
                   {modules,
                       [esockd,esockd_acceptor,esockd_acceptor_sup,
                        esockd_access,esockd_app,esockd_cidr,
                        esockd_connection_sup,esockd_dtls_acceptor,
                        esockd_dtls_acceptor_sup,esockd_dtls_listener,
                        esockd_limiter,esockd_listener,esockd_listener_sup,
                        esockd_peercert,esockd_proxy_protocol,
                        esockd_rate_limit,esockd_server,esockd_ssl,esockd_sup,
                        esockd_transport,esockd_udp]},
                   {registered,[]},
                   {applications,[kernel,stdlib,ssl,sasl]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{esockd_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,cowlib,
                  [{description,
                       "Support library for manipulating Web protocols."},
                   {vsn,"2.8.0"},
                   {id,[]},
                   {modules,
                       [cow_base64url,cow_cookie,cow_date,cow_hpack,cow_http,
                        cow_http2,cow_http2_machine,cow_http_hd,cow_http_te,
                        cow_iolists,cow_mimetypes,cow_multipart,cow_qs,
                        cow_spdy,cow_sse,cow_uri,cow_ws]},
                   {registered,[]},
                   {applications,[kernel,stdlib,crypto]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ranch,
                  [{description,"Socket acceptor pool for TCP protocols."},
                   {vsn,"1.7.1"},
                   {id,[]},
                   {modules,
                       [ranch,ranch_acceptor,ranch_acceptors_sup,ranch_app,
                        ranch_conns_sup,ranch_crc32c,ranch_listener_sup,
                        ranch_protocol,ranch_proxy_header,ranch_server,
                        ranch_ssl,ranch_sup,ranch_tcp,ranch_transport]},
                   {registered,[ranch_sup,ranch_server]},
                   {applications,[kernel,stdlib,ssl]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{ranch_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,cowboy,
                  [{description,"Small, fast, modern HTTP server."},
                   {vsn,"2.8.1"},
                   {id,[]},
                   {modules,
                       [cowboy,cowboy_app,cowboy_bstr,cowboy_children,
                        cowboy_clear,cowboy_clock,cowboy_compress_h,
                        cowboy_constraints,cowboy_handler,cowboy_http,
                        cowboy_http2,cowboy_loop,cowboy_metrics_h,
                        cowboy_middleware,cowboy_req,cowboy_rest,
                        cowboy_router,cowboy_static,cowboy_stream,
                        cowboy_stream_h,cowboy_sub_protocol,cowboy_sup,
                        cowboy_tls,cowboy_tracer_h,cowboy_websocket]},
                   {registered,[cowboy_sup,cowboy_clock]},
                   {applications,[kernel,stdlib,crypto,cowlib,ranch]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{cowboy_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,os_mon,
                  [{description,"CPO  CXC 138 46"},
                   {vsn,"2.5.1"},
                   {id,[]},
                   {modules,
                       [os_mon,os_sup,disksup,memsup,cpu_sup,os_mon_sysinfo,
                        nteventlog]},
                   {registered,
                       [os_mon_sup,os_mon_sysinfo,disksup,memsup,cpu_sup,
                        os_sup_server]},
                   {applications,[kernel,stdlib,sasl]},
                   {included_applications,[]},
                   {env,
                       [{start_cpu_sup,true},
                        {start_disksup,true},
                        {start_memsup,true},
                        {start_os_sup,false}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{os_mon,[]}}]}]}},
     {apply,
         {application,load,
             [{application,emqx,
                  [{description,"EMQ X Enterprise"},
                   {vsn,"4.2.5"},
                   {id,"emqx"},
                   {modules,
                       [emqx,emqx_access_control,emqx_access_rule,
                        emqx_acl_cache,emqx_alarm,emqx_alarm_handler,emqx_app,
                        emqx_banned,emqx_base62,emqx_batch,emqx_boot,
                        emqx_broker,emqx_broker_helper,emqx_broker_sup,
                        emqx_channel,emqx_cm,emqx_cm_locker,emqx_cm_registry,
                        emqx_cm_sup,emqx_congestion,emqx_connection,emqx_ctl,
                        emqx_flapping,emqx_frame,emqx_gc,emqx_global_gc,
                        emqx_guid,emqx_hooks,emqx_inflight,emqx_json,
                        emqx_keepalive,emqx_kernel_sup,emqx_limiter,
                        emqx_listeners,emqx_logger,emqx_logger_formatter,
                        emqx_message,emqx_metrics,emqx_misc,emqx_mountpoint,
                        emqx_mqtt_caps,emqx_mqtt_props,emqx_mqueue,
                        emqx_os_mon,emqx_packet,emqx_pd,emqx_plugins,
                        emqx_pmon,emqx_pool,emqx_pool_sup,emqx_pqueue,
                        emqx_psk,emqx_reason_codes,emqx_router,
                        emqx_router_helper,emqx_router_sup,emqx_rpc,
                        emqx_sequence,emqx_session,emqx_shared_sub,emqx_stats,
                        emqx_sup,emqx_sys,emqx_sys_mon,emqx_sys_sup,
                        emqx_tables,emqx_topic,emqx_tracer,emqx_trie,
                        emqx_types,emqx_vm,emqx_vm_mon,emqx_ws_connection,
                        emqx_zone]},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,gproc,gen_rpc,sasl,esockd,cowboy,
                        os_mon]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,mnesia,
                  [{description,"MNESIA  CXC 138 12"},
                   {vsn,"4.16.3"},
                   {id,[]},
                   {modules,
                       [mnesia,mnesia_app,mnesia_backend_type,mnesia_backup,
                        mnesia_bup,mnesia_checkpoint,mnesia_checkpoint_sup,
                        mnesia_controller,mnesia_dumper,mnesia_event,
                        mnesia_ext_sup,mnesia_frag,mnesia_frag_hash,
                        mnesia_index,mnesia_kernel_sup,mnesia_late_loader,
                        mnesia_lib,mnesia_loader,mnesia_locker,mnesia_log,
                        mnesia_monitor,mnesia_recover,mnesia_registry,
                        mnesia_schema,mnesia_snmp_hook,mnesia_subscr,
                        mnesia_sup,mnesia_sp,mnesia_text,mnesia_tm]},
                   {registered,
                       [mnesia_dumper_load_regulator,mnesia_event,
                        mnesia_fallback,mnesia_controller,mnesia_kernel_sup,
                        mnesia_late_loader,mnesia_locker,mnesia_monitor,
                        mnesia_recover,mnesia_substr,mnesia_sup,mnesia_tm]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{mnesia_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,inets,
                  [{description,"INETS  CXC 138 49"},
                   {vsn,"7.1.2"},
                   {id,[]},
                   {modules,
                       [inets,inets_sup,inets_app,inets_service,inets_trace,
                        inets_lib,inets_ftp_wrapper,httpc,httpc_handler,
                        httpc_handler_sup,httpc_manager,httpc_profile_sup,
                        httpc_request,httpc_response,httpc_sup,httpc_cookie,
                        http_uri,http_chunk,http_request,http_response,
                        http_transport,http_util,httpd,httpd_acceptor,
                        httpd_acceptor_sup,httpd_cgi,httpd_connection_sup,
                        httpd_conf,httpd_custom,httpd_custom_api,httpd_esi,
                        httpd_example,httpd_file,httpd_instance_sup,httpd_log,
                        httpd_logger,httpd_manager,httpd_misc_sup,
                        httpd_request,httpd_request_handler,httpd_response,
                        httpd_script_env,httpd_socket,httpd_sup,httpd_util,
                        mod_actions,mod_alias,mod_auth,mod_auth_dets,
                        mod_auth_mnesia,mod_auth_plain,mod_auth_server,
                        mod_browser,mod_cgi,mod_dir,mod_disk_log,mod_esi,
                        mod_get,mod_head,mod_htaccess,mod_log,mod_range,
                        mod_responsecontrol,mod_security,mod_security_server,
                        mod_trace,inets_tftp_wrapper]},
                   {registered,[inets_sup,httpc_manager]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{inets_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,ekka,
                  [{description,"Autocluster and Autoheal for EMQ X Broker"},
                   {vsn,"0.7.5"},
                   {id,[]},
                   {modules,
                       [ekka,ekka_app,ekka_autoclean,ekka_autocluster,
                        ekka_autoheal,ekka_boot,ekka_cluster,ekka_cluster_dns,
                        ekka_cluster_etcd,ekka_cluster_k8s,ekka_cluster_mcast,
                        ekka_cluster_static,ekka_cluster_strategy,
                        ekka_cluster_sup,ekka_dist,ekka_epmd,ekka_guid,
                        ekka_httpc,ekka_locker,ekka_locker_sup,
                        ekka_membership,ekka_mnesia,ekka_node,
                        ekka_node_monitor,ekka_node_ttl,ekka_ring,ekka_sup]},
                   {registered,
                       [ekka_sup,ekka_membership,ekka_cluster_sup,
                        ekka_node_monitor]},
                   {applications,[kernel,stdlib,mnesia,inets]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{ekka_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,emqx_sn,
                  [{description,"EMQ X MQTT-SN Plugin"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_sn_app,emqx_sn_asleep_timer,emqx_sn_broadcast,
                        emqx_sn_frame,emqx_sn_gateway,emqx_sn_registry,
                        emqx_sn_sup]},
                   {registered,[]},
                   {applications,[kernel,stdlib,esockd]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_sn_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,gen_coap,
                  [{description,"Constrained Application Protocol"},
                   {vsn,"0.2.1"},
                   {id,[]},
                   {modules,
                       [coap_channel,coap_client,coap_message,
                        coap_message_parser,coap_observer,coap_resource,
                        coap_responder,coap_responder_sup,coap_server,
                        coap_server_content,coap_server_registry,coap_test,
                        coap_transport,core_iana,core_link,core_link_parser,
                        core_link_scanner,sample_client,sample_server]},
                   {registered,[]},
                   {applications,[kernel,stdlib,esockd]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{coap_server,[]}}]}]}},
     {apply,
         {application,load,
             [{application,emqx_coap,
                  [{description,"EMQ X CoAP Gateway"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_coap_app,emqx_coap_mqtt_adapter,
                        emqx_coap_ps_resource,emqx_coap_ps_topics,
                        emqx_coap_registry,emqx_coap_resource,
                        emqx_coap_server,emqx_coap_sup,emqx_coap_timer]},
                   {registered,[]},
                   {applications,[kernel,stdlib,gen_coap]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_coap_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,recon,
                  [{description,"Diagnostic tools for production use"},
                   {vsn,"2.4.0"},
                   {id,[]},
                   {modules,
                       [recon,recon_alloc,recon_lib,recon_rec,recon_trace]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,emqx_recon,
                  [{description,"EMQ X Recon Plugin"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,[emqx_recon,emqx_recon_cli]},
                   {registered,[]},
                   {applications,[kernel,stdlib,recon]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_recon,[]}}]}]}},
     {apply,
         {application,load,
             [{application,emqx_stomp,
                  [{description,"EMQ X Stomp Protocol Plugin"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_stomp,emqx_stomp_connection,emqx_stomp_frame,
                        emqx_stomp_heartbeat,emqx_stomp_protocol,
                        emqx_stomp_transaction]},
                   {registered,[emqx_stomp_sup]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_stomp,[]}}]}]}},
     {apply,
         {application,load,
             [{application,xmerl,
                  [{description,"XML parser"},
                   {vsn,"1.3.23"},
                   {id,[]},
                   {modules,
                       [xmerl,xmerl_b64Bin,xmerl_b64Bin_scan,xmerl_eventp,
                        xmerl_html,xmerl_lib,xmerl_otpsgml,xmerl_regexp,
                        xmerl_sax_parser,xmerl_sax_parser_list,
                        xmerl_sax_parser_latin1,xmerl_sax_parser_utf8,
                        xmerl_sax_parser_utf16be,xmerl_sax_parser_utf16le,
                        xmerl_sax_simple_dom,xmerl_sax_old_dom,xmerl_scan,
                        xmerl_sgml,xmerl_simple,xmerl_text,xmerl_ucs,
                        xmerl_uri,xmerl_validate,xmerl_xlate,xmerl_xml,
                        xmerl_xpath,xmerl_xpath_lib,xmerl_xpath_parse,
                        xmerl_xpath_pred,xmerl_xpath_scan,xmerl_xs,xmerl_xsd,
                        xmerl_xsd_type]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,jiffy,
                  [{description,"JSON Decoder/Encoder."},
                   {vsn,"1.0.5"},
                   {id,[]},
                   {modules,[jiffy,jiffy_utf8]},
                   {registered,[]},
                   {applications,[kernel,stdlib,xmerl]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,minirest,
                  [{description,
                       "A mini RESTful API framework built on cowboy and jiffy"},
                   {vsn,"0.3.2"},
                   {id,"minirest"},
                   {modules,[minirest,minirest_handler]},
                   {registered,[]},
                   {applications,[kernel,stdlib,cowboy,jiffy]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,emqx_management,
                  [{description,"EMQ X Management API and CLI"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_mgmt,emqx_mgmt_api,emqx_mgmt_api_alarms,
                        emqx_mgmt_api_apps,emqx_mgmt_api_banned,
                        emqx_mgmt_api_brokers,emqx_mgmt_api_clients,
                        emqx_mgmt_api_data,emqx_mgmt_api_listeners,
                        emqx_mgmt_api_metrics,emqx_mgmt_api_nodes,
                        emqx_mgmt_api_plugins,emqx_mgmt_api_pubsub,
                        emqx_mgmt_api_routes,emqx_mgmt_api_stats,
                        emqx_mgmt_api_subscriptions,emqx_mgmt_app,
                        emqx_mgmt_auth,emqx_mgmt_cli,emqx_mgmt_http,
                        emqx_mgmt_sup,emqx_mgmt_util]},
                   {registered,[emqx_management_sup]},
                   {applications,[kernel,stdlib,minirest]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_mgmt_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,jsone,
                  [{description,"Erlang JSON Library"},
                   {vsn,"1.4.6"},
                   {id,[]},
                   {modules,[jsone,jsone_decode,jsone_encode]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,erlavro,
                  [{description,"Apache Avro support for Erlang/Elixir"},
                   {vsn,"2.9.2"},
                   {id,[]},
                   {modules,
                       [avro,avro_array,avro_binary_decoder,
                        avro_binary_encoder,avro_decoder_hooks,avro_enum,
                        avro_fingerprint,avro_fixed,avro_json_decoder,
                        avro_json_encoder,avro_map,avro_ocf,avro_primitive,
                        avro_record,avro_schema_store,avro_union,avro_util]},
                   {registered,[]},
                   {applications,[kernel,stdlib,jsone]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,gpb,
                  [{description,
                       "Google protocol buffer compiler and runtime support"},
                   {vsn,"4.10.0"},
                   {id,[]},
                   {modules,
                       [gpb,gpb_analyzer,gpb_codegen,gpb_codemorpher,
                        gpb_compile,gpb_compile_descr,gpb_decoders_lib,
                        gpb_defs,gpb_descriptor,gpb_gen_decoders,
                        gpb_gen_encoders,gpb_gen_introspect,
                        gpb_gen_json_decoders,gpb_gen_json_encoders,
                        gpb_gen_mergers,gpb_gen_nif,gpb_gen_translators,
                        gpb_gen_types,gpb_gen_verifiers,gpb_lib,gpb_names,
                        gpb_parse,gpb_scan]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,emqx_schema_registry,
                  [{description,"EMQ X Schema Registry"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_schema_3rd_party,emqx_schema_api,
                        emqx_schema_http,emqx_schema_parser,
                        emqx_schema_registry,emqx_schema_registry_app,
                        emqx_schema_registry_sup,emqx_schema_tcp]},
                   {registered,[]},
                   {applications,[kernel,stdlib,erlavro,gpb]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_schema_registry_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,rulesql,
                  [{description,"Rule SQL Lib for EMQX"},
                   {vsn,"0.1.2"},
                   {id,[]},
                   {modules,[rulesql,sql_lex]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,getopt,
                  [{description,"Command-line options parser for Erlang"},
                   {vsn,"1.0.1"},
                   {id,[]},
                   {modules,[getopt]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,emqx_rule_engine,
                  [{description,"EMQ X Rule Engine"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_rule_actions,emqx_rule_actions_trans,
                        emqx_rule_engine,emqx_rule_engine_api,
                        emqx_rule_engine_app,emqx_rule_engine_cli,
                        emqx_rule_engine_sup,emqx_rule_events,emqx_rule_funcs,
                        emqx_rule_id,emqx_rule_locker,emqx_rule_maps,
                        emqx_rule_metrics,emqx_rule_registry,
                        emqx_rule_runtime,emqx_rule_sqlparser,
                        emqx_rule_sqltester,emqx_rule_utils,
                        emqx_rule_validator]},
                   {registered,[emqx_rule_engine_sup,emqx_rule_registry]},
                   {applications,[kernel,stdlib,rulesql,getopt]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_rule_engine_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,unicode_util_compat,
                  [{description,
                       "unicode_util compatibility library for Erlang < 20"},
                   {vsn,"0.7.0"},
                   {id,[]},
                   {modules,[string_compat,unicode_util_compat]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,idna,
                  [{description,"A pure Erlang IDNA implementation"},
                   {vsn,"6.1.1"},
                   {id,[]},
                   {modules,
                       [idna,idna_bidi,idna_context,idna_data,idna_mapping,
                        idna_table,idna_ucs,punycode]},
                   {registered,[]},
                   {applications,[kernel,stdlib,unicode_util_compat]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,mimerl,
                  [{description,"Library to handle mimetypes"},
                   {vsn,"1.2.0"},
                   {id,[]},
                   {modules,[mimerl]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,certifi,
                  [{description,
                       "CA bundle adapted from Mozilla by https://certifi.io"},
                   {vsn,"2.5.3"},
                   {id,[]},
                   {modules,[certifi]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,syntax_tools,
                  [{description,"Syntax tools"},
                   {vsn,"2.2.1"},
                   {id,[]},
                   {modules,
                       [epp_dodger,erl_comment_scan,erl_prettypr,
                        erl_recomment,erl_syntax,erl_syntax_lib,erl_tidy,igor,
                        merl,merl_transform,prettypr]},
                   {registered,[]},
                   {applications,[stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,parse_trans,
                  [{description,"Parse transform library"},
                   {vsn,"3.3.1"},
                   {id,[]},
                   {modules,
                       [ct_expand,exprecs,parse_trans,parse_trans_codegen,
                        parse_trans_mod,parse_trans_pp]},
                   {registered,[]},
                   {applications,[kernel,stdlib,syntax_tools]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ssl_verify_fun,
                  [{description,[]},
                   {vsn,"1.1.4"},
                   {id,[]},
                   {modules,
                       [ssl_verify_fingerprint,ssl_verify_fun_cert_helpers,
                        ssl_verify_fun_encodings,ssl_verify_hostname,
                        ssl_verify_pk,ssl_verify_string,ssl_verify_util]},
                   {registered,[]},
                   {applications,[kernel,stdlib,ssl]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,metrics,
                  [{description,
                       "A generic interface to different metrics systems in Erlang."},
                   {vsn,"1.0.1"},
                   {id,[]},
                   {modules,
                       [metrics,metrics_dummy,metrics_exometer,
                        metrics_folsom]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,hackney,
                  [{description,"simple HTTP client"},
                   {vsn,"1.17.0"},
                   {id,[]},
                   {modules,
                       [hackney,hackney_app,hackney_bstr,hackney_connect,
                        hackney_connection,hackney_connections,hackney_cookie,
                        hackney_date,hackney_headers,hackney_headers_new,
                        hackney_http,hackney_http_connect,hackney_local_tcp,
                        hackney_manager,hackney_metrics,hackney_multipart,
                        hackney_pool,hackney_pool_handler,hackney_request,
                        hackney_response,hackney_socks5,hackney_ssl,
                        hackney_ssl_certificate,hackney_stream,hackney_sup,
                        hackney_tcp,hackney_trace,hackney_url,hackney_util]},
                   {registered,[hackney_pool]},
                   {applications,
                       [kernel,stdlib,crypto,asn1,public_key,ssl,
                        unicode_util_compat,idna,mimerl,certifi,parse_trans,
                        ssl_verify_fun,metrics]},
                   {included_applications,[]},
                   {env,
                       [{timeout,150000},
                        {max_connections,50},
                        {restart,permanent},
                        {shutdown,10000},
                        {maxr,10},
                        {maxt,1}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{hackney_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,tdengine,
                  [{description,"TDengine Client"},
                   {vsn,"0.1.0"},
                   {id,[]},
                   {modules,[tdengine,tdengine_app,tdengine_sup]},
                   {registered,[tdengine_sup]},
                   {applications,[kernel,stdlib,hackney]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{tdengine_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,clickhouse,
                  [{description,"ClickHouse Client"},
                   {vsn,"0.1"},
                   {id,[]},
                   {modules,[clickhouse,clickhouse_app,clickhouse_sup]},
                   {registered,[clickhouse_sup]},
                   {applications,[kernel,stdlib,hackney]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{clickhouse_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,odbc,
                  [{description,"Erlang ODBC application"},
                   {vsn,"2.12.4"},
                   {id,[]},
                   {modules,[odbc,odbc_app,odbc_sup]},
                   {registered,[odbc_sup]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{odbc_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,dolphinc,
                  [{description,"The DolphinDB erlang API implement"},
                   {vsn,"0.1.2"},
                   {id,[]},
                   {modules,[dolphinc,dolphinc_app]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{dolphinc_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,jamdb_oracle,
                  [{description,"Erlang driver for Oracle"},
                   {vsn,"0.4.2"},
                   {id,[]},
                   {modules,
                       [jamdb_oracle,jamdb_oracle_conn,jamdb_oracle_crypt,
                        jamdb_oracle_tns_decoder,jamdb_oracle_tns_encoder]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,emqx_rule_actions,
                  [{description,"Rule actions for emqx enterprise"},
                   {vsn,"e4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_backend_cassa_actions,
                        emqx_backend_clickhouse_actions,
                        emqx_backend_dolphindb_actions,
                        emqx_backend_dynamo_actions,
                        emqx_backend_influxdb_actions,
                        emqx_backend_mongo_actions,emqx_backend_mysql_actions,
                        emqx_backend_opentsdb_actions,
                        emqx_backend_oracle_actions,
                        emqx_backend_pgsql_actions,emqx_backend_redis_actions,
                        emqx_backend_sqlserver_actions,
                        emqx_backend_tdengine_actions,
                        emqx_bridge_kafka_actions,emqx_bridge_pulsar_actions,
                        emqx_bridge_rabbit_actions,emqx_bridge_rocket_actions,
                        emqx_rule_actions_batcher,emqx_rule_actions_utils]},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,tdengine,clickhouse,odbc,dolphinc,
                        jamdb_oracle]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,emqx_modules,
                  [{description,"EMQ X Module Management"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_mod_acl_internal,emqx_mod_api_topic_metrics,
                        emqx_mod_delayed,emqx_mod_presence,emqx_mod_rewrite,
                        emqx_mod_subscription,emqx_mod_topic_metrics,
                        emqx_modules,emqx_modules_api,emqx_modules_app,
                        emqx_modules_registry,emqx_modules_sup,
                        emqx_modules_utils]},
                   {registered,[emqx_modules_sup,emqx_modules_registry]},
                   {applications,[kernel,stdlib,getopt]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_modules_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,emqx_modules_spec,
                  [{description,"Modules spec for emqx enterprise"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_kafka_consumer,emqx_module_auth_http,
                        emqx_module_auth_jwt,emqx_module_auth_ldap,
                        emqx_module_auth_mnesia,emqx_module_auth_mongo,
                        emqx_module_auth_mysql,emqx_module_auth_pgsql,
                        emqx_module_auth_psk_file,emqx_module_auth_redis,
                        emqx_module_auth_sasl,emqx_module_consumer_kafka,
                        emqx_module_consumer_pulsar,
                        emqx_module_delayed_publish,emqx_module_exhook,
                        emqx_module_exproto,emqx_module_hot_confs,
                        emqx_module_internal_acl,emqx_module_presence,
                        emqx_module_prometheus,emqx_module_proto_coap,
                        emqx_module_proto_gbt32960,emqx_module_proto_jt808,
                        emqx_module_proto_lwm2m,emqx_module_proto_mqtt_sn,
                        emqx_module_proto_stomp,emqx_module_proto_tcp,
                        emqx_module_recon,emqx_module_retainer,
                        emqx_module_subscriber_mqtt,emqx_module_subscription,
                        emqx_module_topic_metrics,emqx_module_topic_rewrite,
                        emqx_module_utils,emqx_pulsar_consumer]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,emqx_retainer,
                  [{description,"EMQ X Retainer"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_retainer,emqx_retainer_app,emqx_retainer_cli,
                        emqx_retainer_sup]},
                   {registered,[emqx_retainer_sup]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_retainer_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,replayq,
                  [{description,"A Disk Queue for Log Replay in Erlang"},
                   {vsn,"0.3.2"},
                   {id,[]},
                   {modules,[replayq]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,emqtt,
                  [{description,"Erlang MQTT v5.0 Client"},
                   {vsn,"1.2.3"},
                   {id,"emqtt"},
                   {modules,
                       [emqtt,emqtt_cli,emqtt_frame,emqtt_props,emqtt_sock,
                        emqtt_ws]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,emqx_bridge_mqtt,
                  [{description,"EMQ X Bridge to MQTT Broker"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_bridge_connect,emqx_bridge_mqtt,
                        emqx_bridge_mqtt_actions,emqx_bridge_mqtt_app,
                        emqx_bridge_mqtt_cli,emqx_bridge_mqtt_sup,
                        emqx_bridge_msg,emqx_bridge_rpc,emqx_bridge_worker]},
                   {registered,[]},
                   {applications,[kernel,stdlib,replayq,emqtt]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_bridge_mqtt_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,gun,
                  [{description,
                       "HTTP/1.1, HTTP/2 and Websocket client for Erlang/OTP."},
                   {vsn,"1.3.3"},
                   {id,[]},
                   {modules,
                       [gun,gun_app,gun_content_handler,gun_data_h,gun_http,
                        gun_http2,gun_sse_h,gun_sup,gun_tcp,gun_tls,gun_ws,
                        gun_ws_h]},
                   {registered,[gun_sup]},
                   {applications,[kernel,stdlib,ssl,cowlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{gun_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,ehttpc,
                  [{description,"HTTP Client for Erlang/OTP"},
                   {vsn,"0.1.2"},
                   {id,[]},
                   {modules,
                       [ehttpc,ehttpc_app,ehttpc_pool,ehttpc_pool_sup,
                        ehttpc_sup,ehttpc_worker_sup]},
                   {registered,[]},
                   {applications,[kernel,stdlib,gproc,gun]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{ehttpc_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,emqx_web_hook,
                  [{description,"EMQ X WebHook Plugin"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_web_hook,emqx_web_hook_actions,emqx_web_hook_app,
                        emqx_web_hook_sup]},
                   {registered,[emqx_web_hook_sup]},
                   {applications,[kernel,stdlib,ehttpc]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_web_hook_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,emqx_auth_mnesia,
                  [{description,"EMQ X Authentication with Mnesia"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_acl_mnesia,emqx_acl_mnesia_api,
                        emqx_acl_mnesia_cli,emqx_auth_mnesia,
                        emqx_auth_mnesia_api,emqx_auth_mnesia_app,
                        emqx_auth_mnesia_cli,emqx_auth_mnesia_sup]},
                   {registered,[]},
                   {applications,[kernel,stdlib,mnesia]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_auth_mnesia_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,emqx_auth_http,
                  [{description,"EMQ X Authentication/ACL with HTTP API"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_acl_http,emqx_auth_http,emqx_auth_http_app,
                        emqx_auth_http_cli,emqx_http_client,
                        emqx_http_client_sup]},
                   {registered,[emqx_auth_http_sup]},
                   {applications,[kernel,stdlib,gproc,gun]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_auth_http_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,mysql,
                  [{description,"MySQL/OTP - Erlang MySQL client driver"},
                   {vsn,"1.5.0"},
                   {id,[]},
                   {modules,
                       [mysql,mysql_cache,mysql_conn,mysql_encode,
                        mysql_protocol]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ecpool,
                  [{description,"Erlang Client/Connection Pool"},
                   {vsn,"0.5.1"},
                   {id,[]},
                   {modules,
                       [ecpool,ecpool_app,ecpool_pool,ecpool_pool_sup,
                        ecpool_sup,ecpool_worker,ecpool_worker_sup]},
                   {registered,[]},
                   {applications,[kernel,stdlib,gproc]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{ecpool_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,pbkdf2,
                  [{description,"Erlang PBKDF2 Key Derivation Function"},
                   {vsn,"2.0.2"},
                   {id,[]},
                   {modules,[pbkdf2]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,bcrypt,
                  [{description,
                       "An Erlang wrapper (NIF or port program) for the OpenBSD password scheme, bcrypt."},
                   {vsn,"0.6.0"},
                   {id,[]},
                   {modules,
                       [bcrypt,bcrypt_app,bcrypt_nif,bcrypt_nif_worker,
                        bcrypt_pool,bcrypt_port,bcrypt_port_sup,bcrypt_sup]},
                   {registered,
                       [bcrypt_sup,bcrypt_nif_worker,bcrypt_port_sup,
                        bcrypt_pool]},
                   {applications,[kernel,stdlib,crypto]},
                   {included_applications,[]},
                   {env,
                       [{default_log_rounds,12},
                        {mechanism,nif},
                        {pool_size,4}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{bcrypt_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,emqx_passwd,
                  [{description,"Password Hash Library for EMQ X Broker"},
                   {vsn,"0.1"},
                   {id,[]},
                   {modules,[emqx_passwd]},
                   {registered,[]},
                   {applications,[kernel,stdlib,ssl,pbkdf2,bcrypt]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,emqx_auth_mysql,
                  [{description,"EMQ X Authentication/ACL with MySQL"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_acl_mysql,emqx_auth_mysql,emqx_auth_mysql_app,
                        emqx_auth_mysql_cli,emqx_auth_mysql_sup]},
                   {registered,[emqx_auth_mysql_sup]},
                   {applications,[kernel,stdlib,mysql,ecpool,emqx_passwd]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_auth_mysql_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,jose,
                  [{description,
                       "JSON Object Signing and Encryption (JOSE) for Erlang and Elixir."},
                   {vsn,"1.10.1"},
                   {id,"git"},
                   {modules,
                       [jose,jose_app,jose_base,jose_base64,jose_base64url,
                        jose_block_encryptor,jose_chacha20_poly1305,
                        jose_chacha20_poly1305_crypto,
                        jose_chacha20_poly1305_libsodium,
                        jose_chacha20_poly1305_unsupported,jose_curve25519,
                        jose_curve25519_libdecaf,jose_curve25519_libsodium,
                        jose_curve25519_unsupported,jose_curve448,
                        jose_curve448_libdecaf,jose_curve448_unsupported,
                        jose_json,jose_json_jason,jose_json_jiffy,
                        jose_json_jsone,jose_json_jsx,jose_json_ojson,
                        jose_json_poison,jose_json_poison_compat_encoder,
                        jose_json_poison_lexical_encoder,
                        jose_json_unsupported,jose_jwa,jose_jwa_aes,
                        jose_jwa_aes_kw,jose_jwa_base64url,jose_jwa_bench,
                        jose_jwa_chacha20,jose_jwa_chacha20_poly1305,
                        jose_jwa_concat_kdf,jose_jwa_curve25519,
                        jose_jwa_curve448,jose_jwa_ed25519,jose_jwa_ed448,
                        jose_jwa_hchacha20,jose_jwa_math,jose_jwa_pkcs1,
                        jose_jwa_pkcs5,jose_jwa_pkcs7,jose_jwa_poly1305,
                        jose_jwa_sha3,jose_jwa_unsupported,jose_jwa_x25519,
                        jose_jwa_x448,jose_jwa_xchacha20,
                        jose_jwa_xchacha20_poly1305,jose_jwe,jose_jwe_alg,
                        jose_jwe_alg_aes_kw,jose_jwe_alg_c20p_kw,
                        jose_jwe_alg_dir,jose_jwe_alg_ecdh_1pu,
                        jose_jwe_alg_ecdh_es,jose_jwe_alg_pbes2,
                        jose_jwe_alg_rsa,jose_jwe_alg_xc20p_kw,jose_jwe_enc,
                        jose_jwe_enc_aes,jose_jwe_enc_c20p,jose_jwe_enc_xc20p,
                        jose_jwe_zip,jose_jwk,jose_jwk_der,jose_jwk_kty,
                        jose_jwk_kty_ec,jose_jwk_kty_oct,
                        jose_jwk_kty_okp_ed25519,jose_jwk_kty_okp_ed25519ph,
                        jose_jwk_kty_okp_ed448,jose_jwk_kty_okp_ed448ph,
                        jose_jwk_kty_okp_x25519,jose_jwk_kty_okp_x448,
                        jose_jwk_kty_rsa,jose_jwk_oct,jose_jwk_openssh_key,
                        jose_jwk_pem,jose_jwk_set,jose_jwk_use_enc,
                        jose_jwk_use_sig,jose_jws,jose_jws_alg,
                        jose_jws_alg_ecdsa,jose_jws_alg_eddsa,
                        jose_jws_alg_hmac,jose_jws_alg_none,
                        jose_jws_alg_poly1305,jose_jws_alg_rsa_pkcs1_v1_5,
                        jose_jws_alg_rsa_pss,jose_jwt,jose_public_key,
                        jose_server,jose_sha3,jose_sha3_keccakf1600_driver,
                        jose_sha3_keccakf1600_nif,jose_sha3_libdecaf,
                        jose_sha3_unsupported,jose_sup,
                        jose_xchacha20_poly1305,
                        jose_xchacha20_poly1305_crypto,
                        jose_xchacha20_poly1305_unsupported]},
                   {registered,[]},
                   {applications,[kernel,stdlib,crypto,asn1,public_key]},
                   {included_applications,[]},
                   {env,[{crypto_fallback,true}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{jose_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,emqx_auth_jwt,
                  [{description,"EMQ X Authentication with JWT"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_auth_jwt,emqx_auth_jwt_app,emqx_auth_jwt_svr]},
                   {registered,[emqx_auth_jwt_sup]},
                   {applications,[kernel,stdlib,jose]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_auth_jwt_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,emqx_psk_file,
                  [{description,"EMQX PSK Plugin from File"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_psk_file,emqx_psk_file_app,emqx_psk_file_sup]},
                   {registered,[emqx_psk_file_sup]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_psk_file_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,eldap2,
                  [{description,"Ldap api"},
                   {vsn,"1.2.2"},
                   {id,[]},
                   {modules,['ELDAPv3',eldap2]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,emqx_auth_ldap,
                  [{description,"EMQ X Authentication/ACL with LDAP"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_acl_ldap,emqx_auth_ldap,emqx_auth_ldap_app,
                        emqx_auth_ldap_cli,emqx_auth_ldap_sup]},
                   {registered,[emqx_auth_ldap_sup]},
                   {applications,[kernel,stdlib,ecpool,emqx_passwd,eldap2]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_auth_ldap_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,bson,
                  [{description,
                       "BSON are JSON-like objects with a standard binary serialization. See bsonspec.org"},
                   {vsn,"v0.2.2"},
                   {id,[]},
                   {modules,[bson,bson_binary,bson_schema]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,poolboy,
                  [{description,"A hunky Erlang worker pool factory"},
                   {vsn,"1.5.1"},
                   {id,[]},
                   {modules,[poolboy,poolboy_sup,poolboy_worker]},
                   {registered,[poolboy]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,mongodb,
                  [{description,
                       "Client interface to MongoDB, also known as the driver. See www.mongodb.org"},
                   {vsn,"3.0.0"},
                   {id,[]},
                   {modules,
                       [mc_auth_logic,mc_connection_man,mc_cursor,mc_monitor,
                        mc_pool_sup,mc_selecting_logics,mc_server,
                        mc_super_sup,mc_topology,mc_topology_logics,mc_utils,
                        mc_worker,mc_worker_api,mc_worker_logic,mongo_api,
                        mongo_app,mongo_id_server,mongo_protocol,mongoc]},
                   {registered,[]},
                   {applications,[kernel,stdlib,crypto,bson,poolboy]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{mongo_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,emqx_auth_mongo,
                  [{description,"EMQ X Authentication/ACL with MongoDB"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_acl_mongo,emqx_auth_mongo,emqx_auth_mongo_app,
                        emqx_auth_mongo_sup]},
                   {registered,[emqx_auth_mongo_sup]},
                   {applications,[kernel,stdlib,ecpool,emqx_passwd,mongodb]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_auth_mongo_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,epgsql,
                  [{description,"PostgreSQL Client"},
                   {vsn,"4.4.0"},
                   {id,[]},
                   {modules,
                       [epgsql,epgsql_binary,epgsql_cmd_batch,epgsql_cmd_bind,
                        epgsql_cmd_close,epgsql_cmd_connect,
                        epgsql_cmd_describe_portal,
                        epgsql_cmd_describe_statement,epgsql_cmd_equery,
                        epgsql_cmd_execute,epgsql_cmd_parse,
                        epgsql_cmd_prepared_query,epgsql_cmd_squery,
                        epgsql_cmd_start_replication,epgsql_cmd_sync,
                        epgsql_cmd_update_type_cache,epgsql_codec,
                        epgsql_codec_boolean,epgsql_codec_bpchar,
                        epgsql_codec_datetime,epgsql_codec_float,
                        epgsql_codec_geometric,epgsql_codec_hstore,
                        epgsql_codec_integer,epgsql_codec_intrange,
                        epgsql_codec_json,epgsql_codec_net,epgsql_codec_noop,
                        epgsql_codec_postgis,epgsql_codec_text,
                        epgsql_codec_timerange,epgsql_codec_uuid,
                        epgsql_command,epgsql_errcodes,epgsql_fdatetime,
                        epgsql_idatetime,epgsql_oid_db,epgsql_scram,
                        epgsql_sock,epgsql_wire,epgsqla,epgsqli,ewkb]},
                   {registered,[]},
                   {applications,[kernel,stdlib,ssl]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,emqx_auth_pgsql,
                  [{description,"EMQ X Authentication/ACL with PostgreSQL"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_acl_pgsql,emqx_auth_pgsql,emqx_auth_pgsql_app,
                        emqx_auth_pgsql_cli,emqx_auth_pgsql_sup]},
                   {registered,[emqx_auth_pgsql_sup]},
                   {applications,[kernel,stdlib,ecpool,emqx_passwd,epgsql]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_auth_pgsql_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,eredis,
                  [{description,"Erlang Redis Client"},
                   {vsn,"1.2.2"},
                   {id,[]},
                   {modules,
                       [basho_bench_driver_eredis,basho_bench_driver_erldis,
                        eredis,eredis_client,eredis_parser,eredis_sentinel,
                        eredis_sentinel_client,eredis_sentinel_masters,
                        eredis_sentinel_sup,eredis_sub,eredis_sub_client]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,eredis_cluster,
                  [{description,"Redis Cluster pool"},
                   {vsn,"0.6.4"},
                   {id,[]},
                   {modules,
                       [eredis_cluster,eredis_cluster_hash,
                        eredis_cluster_monitor,eredis_cluster_pool,
                        eredis_cluster_pool_worker,eredis_cluster_sup]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{eredis_cluster,[]}}]}]}},
     {apply,
         {application,load,
             [{application,emqx_auth_redis,
                  [{description,"EMQ X Authentication/ACL with Redis"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_acl_redis,emqx_auth_redis,emqx_auth_redis_app,
                        emqx_auth_redis_cli,emqx_auth_redis_sup]},
                   {registered,[emqx_auth_redis_sup]},
                   {applications,
                       [kernel,stdlib,ecpool,emqx_passwd,eredis,
                        eredis_cluster]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_auth_redis_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,emqx_dashboard,
                  [{description,"EMQ X Web Dashboard"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_dashboard,emqx_dashboard_admin,
                        emqx_dashboard_api,emqx_dashboard_app,
                        emqx_dashboard_cli,emqx_dashboard_cluster_api,
                        emqx_dashboard_collection,emqx_dashboard_license_api,
                        emqx_dashboard_monitor_api,emqx_dashboard_sup]},
                   {registered,[emqx_dashboard_sup]},
                   {applications,[kernel,stdlib,mnesia,minirest]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_dashboard_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,emqx_lua_hook,
                  [{description,"EMQ X Lua Hooks"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_lua_hook,emqx_lua_hook_app,emqx_lua_hook_cli,
                        emqx_lua_hook_sup,emqx_lua_script]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_lua_hook_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,lwm2m_coap,
                  [{description,"Constrained Application Protocol for LwM2M"},
                   {vsn,"0.3.0"},
                   {id,[]},
                   {modules,
                       [coap_core_iana,coap_core_link,coap_core_link_parser,
                        coap_core_link_scanner,lwm2m_coap_channel,
                        lwm2m_coap_client,lwm2m_coap_message,
                        lwm2m_coap_message_parser,lwm2m_coap_observer,
                        lwm2m_coap_resource,lwm2m_coap_responder,
                        lwm2m_coap_responder_sup,lwm2m_coap_server,
                        lwm2m_coap_server_content,lwm2m_coap_server_registry,
                        lwm2m_coap_test,lwm2m_coap_transport]},
                   {registered,[]},
                   {applications,[kernel,stdlib,esockd]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{lwm2m_coap_server,[]}}]}]}},
     {apply,
         {application,load,
             [{application,emqx_lwm2m,
                  [{description,"EMQ X LwM2M Gateway"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [binary_util,emqx_lwm2m_api,emqx_lwm2m_app,
                        emqx_lwm2m_cm,emqx_lwm2m_cm_sup,
                        emqx_lwm2m_cmd_handler,emqx_lwm2m_coap_resource,
                        emqx_lwm2m_coap_server,emqx_lwm2m_json,
                        emqx_lwm2m_message,emqx_lwm2m_protocol,emqx_lwm2m_sup,
                        emqx_lwm2m_timer,emqx_lwm2m_tlv,emqx_lwm2m_xml_object,
                        emqx_lwm2m_xml_object_db]},
                   {registered,[emqx_lwm2m_sup]},
                   {applications,[kernel,stdlib,lwm2m_coap]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_lwm2m_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,prometheus,
                  [{description,"Prometheus.io client in Erlang"},
                   {vsn,"3.1.0"},
                   {id,[]},
                   {modules,
                       [prometheus,prometheus_buckets,prometheus_collector,
                        prometheus_counter,prometheus_format,prometheus_gauge,
                        prometheus_histogram,prometheus_http,
                        prometheus_instrumenter,prometheus_metric,
                        prometheus_metric_spec,prometheus_misc,
                        prometheus_mnesia,prometheus_mnesia_collector,
                        prometheus_model,prometheus_model_helpers,
                        prometheus_protobuf_format,prometheus_registry,
                        prometheus_summary,prometheus_sup,
                        prometheus_test_instrumenter,prometheus_text_format,
                        prometheus_time,prometheus_vm_memory_collector,
                        prometheus_vm_statistics_collector,
                        prometheus_vm_system_info_collector]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{prometheus,[]}}]}]}},
     {apply,
         {application,load,
             [{application,emqx_prometheus,
                  [{description,"Prometheus for EMQ X"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_prometheus,emqx_prometheus_app,
                        emqx_prometheus_sup]},
                   {registered,[emqx_prometheus_sup]},
                   {applications,[kernel,stdlib,prometheus]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_prometheus_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,grpc,
                  [{description,"An Erlang implementation of gRPC "},
                   {vsn,"0.5.0"},
                   {id,[]},
                   {modules,
                       [grpc,grpc_app,grpc_client,grpc_client_sup,
                        grpc_cowboy_h,grpc_frame,grpc_lib,grpc_stream_h,
                        grpc_sup]},
                   {registered,[]},
                   {applications,[kernel,stdlib,cowboy,gun]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{grpc_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,emqx_exhook,
                  [{description,"EMQ X Extension for Hook"},
                   {vsn,"e4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_exhook,emqx_exhook_app,emqx_exhook_cli,
                        emqx_exhook_handler,emqx_exhook_pb,emqx_exhook_server,
                        emqx_exhook_sup,emqx_exhook_v_1_hook_provider_bhvr,
                        emqx_exhook_v_1_hook_provider_client]},
                   {registered,[]},
                   {applications,[kernel,stdlib,grpc]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_exhook_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,emqx_exproto,
                  [{description,"EMQ X Extension for Protocol"},
                   {vsn,"e4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_exproto,emqx_exproto_app,emqx_exproto_channel,
                        emqx_exproto_conn,emqx_exproto_gcli,emqx_exproto_gsvr,
                        emqx_exproto_pb,emqx_exproto_sup,
                        emqx_exproto_v_1_connection_adapter_bhvr,
                        emqx_exproto_v_1_connection_adapter_client,
                        emqx_exproto_v_1_connection_handler_bhvr,
                        emqx_exproto_v_1_connection_handler_client]},
                   {registered,[]},
                   {applications,[kernel,stdlib,grpc]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_exproto_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,emqx_sasl,
                  [{description,"EMQ X Enterprise"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_sasl,emqx_sasl_api,emqx_sasl_app,emqx_sasl_cli,
                        emqx_sasl_scram]},
                   {registered,[emqx_sasl_sup]},
                   {applications,[kernel,stdlib,pbkdf2]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_sasl_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,emqx_jt808,
                  [{description,"JT/T808 Connector"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_jt808_app,emqx_jt808_auth,emqx_jt808_connection,
                        emqx_jt808_frame,emqx_jt808_protocol,emqx_jt808_sup]},
                   {registered,[emqx_jt808_sup]},
                   {applications,[kernel,stdlib,esockd]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_jt808_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,emqx_gbt32960,
                  [{description,"GBT-32960 Protocol gateway"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_gbt32960,emqx_gbt32960_app,emqx_gbt32960_channel,
                        emqx_gbt32960_conn,emqx_gbt32960_frame,
                        emqx_gbt32960_sup]},
                   {registered,[emqx_32960_sup]},
                   {applications,[kernel,stdlib,esockd]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_gbt32960_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,emqx_tcp,
                  [{description,"EMQ X TCP based Connector"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_tcp_app,emqx_tcp_connection,emqx_tcp_frame,
                        emqx_tcp_protocol,emqx_tcp_sup]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_tcp_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,emqx_conf,
                  [{description,"EMQ X Hot Configuration"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_conf,emqx_conf_api,emqx_conf_app,emqx_conf_sup]},
                   {registered,[emqx_conf_app]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_conf_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,emqx_backend_redis,
                  [{description,"EMQ X Redis Backend"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_backend_redis,emqx_backend_redis_app,
                        emqx_backend_redis_cli,emqx_backend_redis_sub,
                        emqx_backend_redis_sup]},
                   {registered,[emqx_backend_redis_sup]},
                   {applications,[kernel,stdlib,ecpool,eredis,eredis_cluster]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_backend_redis_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,emqx_backend_mysql,
                  [{description,"EMQ X MySQL Backend"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_backend_mysql,emqx_backend_mysql_app,
                        emqx_backend_mysql_batcher,emqx_backend_mysql_cli,
                        emqx_backend_mysql_sup]},
                   {registered,[emqx_backend_mysql_sup]},
                   {applications,[kernel,stdlib,mysql,ecpool]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_backend_mysql_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,emqx_backend_pgsql,
                  [{description,"EMQ X PostgreSQL Backend"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_backend_pgsql,emqx_backend_pgsql_app,
                        emqx_backend_pgsql_batcher,emqx_backend_pgsql_cli,
                        emqx_backend_pgsql_sup]},
                   {registered,[emqx_backend_pgsql_sup]},
                   {applications,[kernel,stdlib,ecpool,epgsql]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_backend_pgsql_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,emqx_backend_mongo,
                  [{description,"EMQ X MongoDB Backend"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_backend_mongo,emqx_backend_mongo_app,
                        emqx_backend_mongo_cli,emqx_backend_mongo_sup]},
                   {registered,[emqx_backend_mongo_sup]},
                   {applications,[kernel,stdlib,ecpool,mongodb]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_backend_mongo_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,ecql,
                  [{description,"Cassandra Native CQL Driver"},
                   {vsn,"0.5"},
                   {id,[]},
                   {modules,
                       [ecql,ecql_cl,ecql_frame,ecql_proto,ecql_sock,
                        ecql_types]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,emqx_backend_cassa,
                  [{description,"EMQ X Cassandra Backend"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_backend_cassa,emqx_backend_cassa_app,
                        emqx_backend_cassa_cli,emqx_backend_cassa_sup]},
                   {registered,[emqx_backend_cassa_sup]},
                   {applications,[kernel,stdlib,ecpool,ecql]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_backend_cassa_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,jsx,
                  [{description,"a streaming, evented json parsing toolkit"},
                   {vsn,"2.9.0"},
                   {id,[]},
                   {modules,
                       [jsx,jsx_config,jsx_consult,jsx_decoder,jsx_encoder,
                        jsx_parser,jsx_to_json,jsx_to_term,jsx_verify]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,opentsdb,
                  [{description,"OpenTSDB Client"},
                   {vsn,"0.5.0"},
                   {id,[]},
                   {modules,[opentsdb,opentsdb_app,opentsdb_sup]},
                   {registered,[opentsdb_sup]},
                   {applications,[kernel,stdlib,hackney,jsx]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{opentsdb_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,emqx_backend_opentsdb,
                  [{description,"EMQ X OpenTSDB Backend"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_backend_opentsdb,emqx_backend_opentsdb_app,
                        emqx_backend_opentsdb_cli,emqx_backend_opentsdb_sup]},
                   {registered,[emqx_backend_opentsdb_sup]},
                   {applications,[kernel,stdlib,ecpool,opentsdb]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_backend_opentsdb_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,influxdb,
                  [{description,"InfluxDB Client"},
                   {vsn,"0.5.1"},
                   {id,[]},
                   {modules,
                       [influxdb,influxdb_app,influxdb_line,influxdb_sup]},
                   {registered,[influxdb_sup]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{influxdb_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,emqx_backend_influxdb,
                  [{description,"EMQ X InfluxDB Backend"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_backend_influxdb,emqx_backend_influxdb_app,
                        emqx_backend_influxdb_cli,emqx_backend_influxdb_sup]},
                   {registered,[emqx_backend_influxdb_sup]},
                   {applications,[kernel,stdlib,influxdb]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_backend_influxdb_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,eini,
                  [{description,"An Erlang INI parser"},
                   {vsn,"1.2.6"},
                   {id,[]},
                   {modules,[eini,eini_app,eini_lexer,eini_parser,eini_sup]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{eini_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,base16,
                  [{description,"Base16 encoding and decoding"},
                   {vsn,"1.0.0"},
                   {id,[]},
                   {modules,[base16]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,lhttpc,
                  [{description,"Lightweight HTTP Client"},
                   {vsn,"1.6.2"},
                   {id,[]},
                   {modules,
                       [lhttpc,lhttpc_client,lhttpc_lib,lhttpc_manager,
                        lhttpc_sock,lhttpc_sup]},
                   {registered,[lhttpc_manager]},
                   {applications,[kernel,stdlib,crypto,ssl]},
                   {included_applications,[]},
                   {env,[{connection_timeout,300000},{pool_size,1000}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{lhttpc,nil}}]}]}},
     {apply,
         {application,load,
             [{application,erlcloud,
                  [{description,"AWS APIs library for Erlang"},
                   {vsn,"3.2.8"},
                   {id,[]},
                   {modules,
                       [erlcloud,erlcloud_as,erlcloud_athena,
                        erlcloud_autoscaling,erlcloud_aws,
                        erlcloud_cloudformation,erlcloud_cloudfront,
                        erlcloud_cloudsearch,erlcloud_cloudtrail,
                        erlcloud_cloudwatch_logs,erlcloud_config,erlcloud_cur,
                        erlcloud_ddb,erlcloud_ddb1,erlcloud_ddb2,
                        erlcloud_ddb_impl,erlcloud_ddb_streams,
                        erlcloud_ddb_util,erlcloud_directconnect,erlcloud_ec2,
                        erlcloud_ec2_meta,erlcloud_ecs,
                        erlcloud_ecs_container_credentials,erlcloud_elb,
                        erlcloud_emr,erlcloud_glue,erlcloud_guardduty,
                        erlcloud_http,erlcloud_httpc,erlcloud_iam,
                        erlcloud_inspector,erlcloud_json,erlcloud_kinesis,
                        erlcloud_kinesis_impl,erlcloud_kms,erlcloud_lambda,
                        erlcloud_mes,erlcloud_mms,erlcloud_mon,erlcloud_mturk,
                        erlcloud_rds,erlcloud_redshift,erlcloud_retry,
                        erlcloud_route53,erlcloud_s3,erlcloud_sdb,
                        erlcloud_ses,erlcloud_sns,erlcloud_sqs,
                        erlcloud_states,erlcloud_sts,erlcloud_util,
                        erlcloud_waf,erlcloud_xml]},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,crypto,public_key,ssl,inets,xmerl,jsx,
                        eini,base16,lhttpc]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,emqx_backend_dynamo,
                  [{description,"EMQ X DynamoDB Backend"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_backend_dynamo,emqx_backend_dynamo_app,
                        emqx_backend_dynamo_cli,emqx_backend_dynamo_client,
                        emqx_backend_dynamo_sup]},
                   {registered,[emqx_backend_dynamo_app]},
                   {applications,[kernel,stdlib,ecpool,erlcloud]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_backend_dynamo_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,emqx_backend_timescale,
                  [{description,"EMQ X Timescale Backend"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_backend_timescale,emqx_backend_timescale_app,
                        emqx_backend_timescale_cli,
                        emqx_backend_timescale_sup]},
                   {registered,[emqx_backend_timescale_sup]},
                   {applications,[kernel,stdlib,ecpool,epgsql]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_backend_timescale_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,snappyer,
                  [{description,"Snappy as nif for Erlang"},
                   {vsn,"1.2.5"},
                   {id,[]},
                   {modules,[snappyer]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,crc32cer,
                  [{description,"CRC32-C as nif for Erlang"},
                   {vsn,"0.1.9"},
                   {id,[]},
                   {modules,[crc32cer]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,kafka_protocol,
                  [{description,"Kafka protocol library for Erlang/Elixir"},
                   {vsn,"2.3.6.1"},
                   {id,[]},
                   {modules,
                       [kpro,kpro_api_vsn,kpro_auth_backend,kpro_batch,
                        kpro_batch_v01,kpro_brokers,kpro_compress,
                        kpro_connection,kpro_consumer_group,kpro_lib,
                        kpro_prelude_schema,kpro_req_lib,kpro_rsp_lib,
                        kpro_sasl,kpro_schema,kpro_scram,kpro_sent_reqs,
                        kpro_txn_lib,kpro_varint]},
                   {registered,[]},
                   {applications,[kernel,stdlib,ssl,snappyer,crc32cer]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,wolff,
                  [{description,"Kafka's publisher"},
                   {vsn,"1.4.2"},
                   {id,[]},
                   {modules,
                       [wolff,wolff_app,wolff_client,wolff_client_sup,
                        wolff_producer,wolff_producers,wolff_producers_sup,
                        wolff_stats,wolff_sup]},
                   {registered,[]},
                   {applications,[kernel,stdlib,replayq,kafka_protocol]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{wolff_app,start}}]}]}},
     {apply,
         {application,load,
             [{application,supervisor3,
                  [{description,
                       "A copy of supervisor.erl from the R16B Erlang/OTP with modifications"},
                   {vsn,"1.1.11"},
                   {id,[]},
                   {modules,[supervisor3]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,brod,
                  [{description,"Apache Kafka Erlang client library"},
                   {vsn,"3.14.0"},
                   {id,[]},
                   {modules,
                       [brod,brod_cg_commits,brod_cli,brod_cli_pipe,
                        brod_client,brod_consumer,brod_consumers_sup,
                        brod_group_coordinator,brod_group_member,
                        brod_group_subscriber,brod_group_subscriber_v2,
                        brod_group_subscriber_worker,brod_kafka_apis,
                        brod_kafka_request,brod_producer,brod_producer_buffer,
                        brod_producers_sup,brod_sup,brod_topic_subscriber,
                        brod_topic_subscriber_cb_fun,brod_utils]},
                   {registered,[]},
                   {applications,[kernel,stdlib,kafka_protocol,supervisor3]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{brod,[]}}]}]}},
     {apply,
         {application,load,
             [{application,emqx_bridge_kafka,
                  [{description,"EMQ X Bridge to Kafka"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_bridge_kafka,emqx_bridge_kafka_app,
                        emqx_bridge_kafka_cli,emqx_bridge_kafka_sup]},
                   {registered,[emqx_bridge_kafka_sup]},
                   {applications,[kernel,stdlib,erlavro,jsx,wolff,brod]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_bridge_kafka_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,compiler,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"7.5.3"},
                   {id,[]},
                   {modules,
                       [beam_a,beam_asm,beam_block,beam_clean,beam_dict,
                        beam_disasm,beam_except,beam_flatten,beam_jump,
                        beam_kernel_to_ssa,beam_listing,beam_opcodes,
                        beam_peep,beam_ssa,beam_ssa_bsm,beam_ssa_codegen,
                        beam_ssa_dead,beam_ssa_funs,beam_ssa_lint,
                        beam_ssa_opt,beam_ssa_pp,beam_ssa_pre_codegen,
                        beam_ssa_recv,beam_ssa_share,beam_ssa_type,beam_trim,
                        beam_utils,beam_validator,beam_z,cerl,cerl_clauses,
                        cerl_inline,cerl_sets,cerl_trees,compile,core_scan,
                        core_lint,core_parse,core_pp,core_lib,erl_bifs,
                        rec_env,sys_core_alias,sys_core_bsm,sys_core_fold,
                        sys_core_fold_lists,sys_core_inline,
                        sys_pre_attributes,v3_core,v3_kernel,v3_kernel_pp]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,goldrush,
                  [{description,"Erlang event stream processor"},
                   {vsn,"0.1.9"},
                   {id,[]},
                   {modules,
                       [glc,glc_code,glc_lib,glc_ops,glc_run,gr_app,
                        gr_context,gr_counter,gr_counter_sup,gr_manager,
                        gr_manager_sup,gr_param,gr_param_sup,gr_sup,gre]},
                   {registered,[]},
                   {applications,[kernel,stdlib,syntax_tools,compiler]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{gr_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,lager,
                  [{description,"Erlang logging framework"},
                   {vsn,"3.6.5"},
                   {id,[]},
                   {modules,
                       [error_logger_lager_h,lager,lager_app,
                        lager_backend_throttle,lager_common_test_backend,
                        lager_config,lager_console_backend,lager_crash_log,
                        lager_default_formatter,lager_file_backend,
                        lager_format,lager_handler_watcher,
                        lager_handler_watcher_sup,lager_manager_killer,
                        lager_msg,lager_rotator_behaviour,
                        lager_rotator_default,lager_stdlib,lager_sup,
                        lager_transform,lager_trunc_io,lager_util]},
                   {registered,
                       [lager_sup,lager_event,lager_crash_log,
                        lager_handler_watcher_sup]},
                   {applications,[kernel,stdlib,goldrush]},
                   {included_applications,[]},
                   {env,
                       [{colored,false},
                        {colors,
                            [{debug,"\e[0;38m"},
                             {info,"\e[1;37m"},
                             {notice,"\e[1;36m"},
                             {warning,"\e[1;33m"},
                             {error,"\e[1;31m"},
                             {critical,"\e[1;35m"},
                             {alert,"\e[1;44m"},
                             {emergency,"\e[1;41m"}]},
                        {crash_log,"log/crash.log"},
                        {crash_log_msg_size,65536},
                        {crash_log_size,10485760},
                        {crash_log_date,"$D0"},
                        {crash_log_count,5},
                        {crash_log_rotator,lager_rotator_default},
                        {error_logger_redirect,true},
                        {error_logger_hwm,50},
                        {async_threshold,20},
                        {async_threshold_window,5}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{lager_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,rabbit_common,
                  [{description,
                       "Modules shared by rabbitmq-server and rabbitmq-erlang-client"},
                   {vsn,"3.7.14"},
                   {id,[]},
                   {modules,
                       [app_utils,code_version,credit_flow,delegate,
                        delegate_sup,file_handle_cache,
                        file_handle_cache_stats,gen_server2,
                        lager_forwarder_backend,mirrored_supervisor,
                        mnesia_sync,pmon,priority_queue,
                        rabbit_amqp_connection,rabbit_amqqueue_common,
                        rabbit_auth_backend_dummy,rabbit_auth_mechanism,
                        rabbit_authn_backend,rabbit_authz_backend,
                        rabbit_backing_queue,rabbit_basic_common,
                        rabbit_binary_generator,rabbit_binary_parser,
                        rabbit_cert_info,rabbit_channel_common,
                        rabbit_command_assembler,rabbit_control_misc,
                        rabbit_core_metrics,rabbit_data_coercion,
                        rabbit_error_logger_handler,rabbit_event,
                        rabbit_exchange_type,rabbit_framing_amqp_0_8,
                        rabbit_framing_amqp_0_9_1,rabbit_heartbeat,
                        rabbit_http_util,rabbit_json,rabbit_log,rabbit_misc,
                        rabbit_msg_store_index,rabbit_net,rabbit_nodes_common,
                        rabbit_numerical,rabbit_password_hashing,rabbit_pbe,
                        rabbit_peer_discovery_backend,rabbit_policy_validator,
                        rabbit_queue_collector_common,
                        rabbit_queue_master_locator,rabbit_registry,
                        rabbit_registry_class,rabbit_resource_monitor_misc,
                        rabbit_runtime,rabbit_runtime_parameter,rabbit_semver,
                        rabbit_semver_parser,rabbit_ssl_options,rabbit_types,
                        rabbit_writer,supervisor2,vm_memory_monitor,
                        worker_pool,worker_pool_sup,worker_pool_worker]},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,ranch,recon,xmerl,syntax_tools,jsx,
                        compiler,lager]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,amqp_client,
                  [{description,"RabbitMQ AMQP Client"},
                   {vsn,"3.7.14"},
                   {id,[]},
                   {modules,
                       [amqp_auth_mechanisms,amqp_channel,amqp_channel_sup,
                        amqp_channel_sup_sup,amqp_channels_manager,
                        amqp_client,amqp_connection,amqp_connection_sup,
                        amqp_connection_type_sup,amqp_direct_connection,
                        amqp_direct_consumer,amqp_gen_connection,
                        amqp_gen_consumer,amqp_main_reader,
                        amqp_network_connection,amqp_rpc_client,
                        amqp_rpc_server,amqp_selective_consumer,amqp_ssl,
                        amqp_sup,amqp_uri,amqp_util,rabbit_routing_util,
                        uri_parser]},
                   {registered,[amqp_client_sup,amqp_sup]},
                   {applications,[kernel,stdlib,xmerl,rabbit_common]},
                   {included_applications,[]},
                   {env,[{prefer_ipv6,false},{ssl_options,[]}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{amqp_client,[]}}]}]}},
     {apply,
         {application,load,
             [{application,emqx_bridge_rabbit,
                  [{description,"EMQ X Bridge to RabbitMQ"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_bridge_rabbit,emqx_bridge_rabbit_app,
                        emqx_bridge_rabbit_ch,emqx_bridge_rabbit_sup]},
                   {registered,[emqx_bridge_rabbit_sup]},
                   {applications,[kernel,stdlib,recon,ecpool,amqp_client]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_bridge_rabbit_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,murmerl3,
                  [{description,"MurmurHash3 library"},
                   {vsn,"0.1.0"},
                   {id,[]},
                   {modules,[murmerl3]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,pulsar,
                  [{description,"A Erlang client library for Apache Pulsar"},
                   {vsn,"0.4.2"},
                   {id,[]},
                   {modules,
                       [pulsar,pulsar_api,pulsar_app,pulsar_client,
                        pulsar_client_sup,pulsar_consumer,pulsar_consumers,
                        pulsar_consumers_sup,pulsar_producer,pulsar_producers,
                        pulsar_producers_sup,pulsar_protocol_frame,
                        pulsar_sup]},
                   {registered,[pulsar_sup]},
                   {applications,[kernel,stdlib,crc32cer,murmerl3]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{pulsar_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,emqx_bridge_pulsar,
                  [{description,"EMQ X Bridge to Pulsar"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_bridge_pulsar,emqx_bridge_pulsar_app,
                        emqx_bridge_pulsar_sup]},
                   {registered,[emqx_bridge_pulsar_app]},
                   {applications,[kernel,stdlib,pulsar]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_bridge_pulsar_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,jsonr,
                  [{description,"Erlang JSON Library"},
                   {vsn,"1.5.1"},
                   {id,[]},
                   {modules,[jsonr,jsonr_decode,jsonr_encode]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,rocketmq,
                  [{description,"A Erlang client library for Apache RocketMQ"},
                   {vsn,"0.3.2"},
                   {id,[]},
                   {modules,
                       [rocketmq,rocketmq_app,rocketmq_client,
                        rocketmq_client_sup,rocketmq_producer,
                        rocketmq_producers,rocketmq_producers_sup,
                        rocketmq_protocol_frame,rocketmq_sup]},
                   {registered,[rocketmq_sup]},
                   {applications,[kernel,stdlib,jsonr]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{rocketmq_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,emqx_bridge_rocket,
                  [{description,"EMQ X Bridge to RocketMQ"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_bridge_rocket,emqx_bridge_rocket_app,
                        emqx_bridge_rocket_sup]},
                   {registered,[emqx_bridge_rocket_app]},
                   {applications,[kernel,stdlib,rocketmq]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_bridge_rocket_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,emqx_license,
                  [{description,"EMQ X License"},
                   {vsn,"4.2.5"},
                   {id,[]},
                   {modules,
                       [emqx_exhook_entr,emqx_license,emqx_license_app,
                        emqx_license_cli,emqx_license_mgr,emqx_license_sup]},
                   {registered,[emqx_license_sup]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{emqx_license_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,observer,
                  [{description,"OBSERVER version 1"},
                   {vsn,"2.9.3"},
                   {id,[]},
                   {modules,
                       [crashdump_viewer,cdv_atom_cb,cdv_bin_cb,cdv_detail_wx,
                        cdv_dist_cb,cdv_ets_cb,cdv_fun_cb,cdv_gen_cb,
                        cdv_html_wx,cdv_info_wx,cdv_int_tab_cb,cdv_mem_cb,
                        cdv_mod_cb,cdv_multi_wx,cdv_persistent_cb,cdv_port_cb,
                        cdv_proc_cb,cdv_table_wx,cdv_term_cb,cdv_sched_cb,
                        cdv_timer_cb,cdv_virtual_list_wx,cdv_wx,etop,etop_tr,
                        etop_txt,observer,observer_alloc_wx,observer_app_wx,
                        observer_html_lib,observer_lib,observer_perf_wx,
                        observer_port_wx,observer_pro_wx,observer_procinfo,
                        observer_sys_wx,observer_trace_wx,
                        observer_traceoptions_wx,observer_tv_table,
                        observer_tv_wx,observer_wx,ttb,ttb_et]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,luerl,
                  [{description,"Luerl - an implementation of Lua on Erlang"},
                   {vsn,"0.3"},
                   {id,[]},
                   {modules,
                       [luerl,luerl_app,luerl_comp,luerl_comp_cg,
                        luerl_comp_env,luerl_comp_locf,luerl_comp_peep,
                        luerl_comp_vars,luerl_emul,luerl_lib,luerl_lib_basic,
                        luerl_lib_bit32,luerl_lib_debug,luerl_lib_io,
                        luerl_lib_math,luerl_lib_os,luerl_lib_package,
                        luerl_lib_string,luerl_lib_string_format,
                        luerl_lib_table,luerl_parse,luerl_scan,luerl_sup,
                        ttdict]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{luerl_app,[]}}]}]}},
     {progress,applications_loaded},
     {apply,{application,start_boot,[kernel,permanent]}},
     {apply,{application,start_boot,[stdlib,permanent]}},
     {apply,{application,start_boot,[runtime_tools,permanent]}},
     {apply,{application,start_boot,[cuttlefish,permanent]}},
     {apply,{application,start_boot,[gproc,permanent]}},
     {apply,{application,start_boot,[crypto,permanent]}},
     {apply,{application,start_boot,[asn1,permanent]}},
     {apply,{application,start_boot,[public_key,permanent]}},
     {apply,{application,start_boot,[ssl,permanent]}},
     {apply,{application,start_boot,[gen_rpc,permanent]}},
     {apply,{application,start_boot,[sasl,permanent]}},
     {apply,{application,start_boot,[esockd,permanent]}},
     {apply,{application,start_boot,[cowlib,permanent]}},
     {apply,{application,start_boot,[ranch,permanent]}},
     {apply,{application,start_boot,[cowboy,permanent]}},
     {apply,{application,start_boot,[os_mon,permanent]}},
     {apply,{application,start_boot,[emqx,permanent]}},
     {apply,{application,start_boot,[inets,permanent]}},
     {apply,{application,start_boot,[gen_coap,permanent]}},
     {apply,{application,start_boot,[recon,permanent]}},
     {apply,{application,start_boot,[xmerl,permanent]}},
     {apply,{application,start_boot,[jiffy,permanent]}},
     {apply,{application,start_boot,[minirest,permanent]}},
     {apply,{application,start_boot,[jsone,permanent]}},
     {apply,{application,start_boot,[erlavro,permanent]}},
     {apply,{application,start_boot,[gpb,permanent]}},
     {apply,{application,start_boot,[rulesql,permanent]}},
     {apply,{application,start_boot,[getopt,permanent]}},
     {apply,{application,start_boot,[unicode_util_compat,permanent]}},
     {apply,{application,start_boot,[idna,permanent]}},
     {apply,{application,start_boot,[mimerl,permanent]}},
     {apply,{application,start_boot,[certifi,permanent]}},
     {apply,{application,start_boot,[syntax_tools,permanent]}},
     {apply,{application,start_boot,[parse_trans,permanent]}},
     {apply,{application,start_boot,[ssl_verify_fun,permanent]}},
     {apply,{application,start_boot,[metrics,permanent]}},
     {apply,{application,start_boot,[hackney,permanent]}},
     {apply,{application,start_boot,[tdengine,permanent]}},
     {apply,{application,start_boot,[clickhouse,permanent]}},
     {apply,{application,start_boot,[odbc,permanent]}},
     {apply,{application,start_boot,[dolphinc,permanent]}},
     {apply,{application,start_boot,[jamdb_oracle,permanent]}},
     {apply,{application,start_boot,[replayq,permanent]}},
     {apply,{application,start_boot,[emqtt,permanent]}},
     {apply,{application,start_boot,[gun,permanent]}},
     {apply,{application,start_boot,[ehttpc,permanent]}},
     {apply,{application,start_boot,[mysql,permanent]}},
     {apply,{application,start_boot,[ecpool,permanent]}},
     {apply,{application,start_boot,[pbkdf2,permanent]}},
     {apply,{application,start_boot,[bcrypt,permanent]}},
     {apply,{application,start_boot,[emqx_passwd,permanent]}},
     {apply,{application,start_boot,[jose,permanent]}},
     {apply,{application,start_boot,[eldap2,permanent]}},
     {apply,{application,start_boot,[bson,permanent]}},
     {apply,{application,start_boot,[poolboy,permanent]}},
     {apply,{application,start_boot,[mongodb,permanent]}},
     {apply,{application,start_boot,[epgsql,permanent]}},
     {apply,{application,start_boot,[eredis,permanent]}},
     {apply,{application,start_boot,[eredis_cluster,permanent]}},
     {apply,{application,start_boot,[lwm2m_coap,permanent]}},
     {apply,{application,start_boot,[prometheus,permanent]}},
     {apply,{application,start_boot,[grpc,permanent]}},
     {apply,{application,start_boot,[ecql,permanent]}},
     {apply,{application,start_boot,[jsx,permanent]}},
     {apply,{application,start_boot,[opentsdb,permanent]}},
     {apply,{application,start_boot,[influxdb,permanent]}},
     {apply,{application,start_boot,[eini,permanent]}},
     {apply,{application,start_boot,[base16,permanent]}},
     {apply,{application,start_boot,[lhttpc,permanent]}},
     {apply,{application,start_boot,[erlcloud,permanent]}},
     {apply,{application,start_boot,[snappyer,permanent]}},
     {apply,{application,start_boot,[crc32cer,permanent]}},
     {apply,{application,start_boot,[kafka_protocol,permanent]}},
     {apply,{application,start_boot,[wolff,permanent]}},
     {apply,{application,start_boot,[supervisor3,permanent]}},
     {apply,{application,start_boot,[brod,permanent]}},
     {apply,{application,start_boot,[compiler,permanent]}},
     {apply,{application,start_boot,[goldrush,permanent]}},
     {apply,{application,start_boot,[lager,permanent]}},
     {apply,{application,start_boot,[rabbit_common,permanent]}},
     {apply,{application,start_boot,[amqp_client,permanent]}},
     {apply,{application,start_boot,[murmerl3,permanent]}},
     {apply,{application,start_boot,[pulsar,permanent]}},
     {apply,{application,start_boot,[jsonr,permanent]}},
     {apply,{application,start_boot,[rocketmq,permanent]}},
     {apply,{application,start_boot,[emqx_license,permanent]}},
     {apply,{application,start_boot,[luerl,permanent]}},
     {apply,{c,erlangrc,[]}},
     {progress,started}]}.
